[
    {
        "id": "9dea0b26.bbbe98",
        "type": "tab",
        "label": "Grainfather Connect",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4d59d092.50859",
        "type": "subflow",
        "name": "List Files",
        "info": "# List files\n\nWill list files in a directory.\n\nPath can be set in `msg.payload` or by setting the `DIRECTORY` environment variable.\n\nExtensions can be filtered by settings the `EXTENSIONS` environment variable to an Array of extensions.\n",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "3e5f9707.3cbcf8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 40,
                "wires": [
                    {
                        "id": "e6de39b0.e2c978",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DIRECTORY",
                "type": "str",
                "value": ""
            },
            {
                "name": "EXTENSIONS",
                "type": "json",
                "value": "[]"
            }
        ]
    },
    {
        "id": "e3bbcfee.5583",
        "type": "subflow",
        "name": "File Upload",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1140,
                "y": 280,
                "wires": [
                    {
                        "id": "91064a7c.e7d998",
                        "port": 0
                    },
                    {
                        "id": "623624a2.675eac",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "UPLOAD_DIR",
                "type": "str",
                "value": "."
            },
            {
                "name": "EXTENSIONS",
                "type": "json",
                "value": "[]"
            }
        ],
        "color": "#DDAA99",
        "outputLabels": [
            "fileWritten"
        ]
    },
    {
        "id": "355d7d12.6d7412",
        "type": "ui_tab",
        "z": "",
        "name": "GF Connect",
        "icon": "fa-beer",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "321f8fea.8d69d",
        "type": "ui_group",
        "z": "",
        "d": true,
        "name": "Raw Messages",
        "tab": "355d7d12.6d7412",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "35c55f1f.67b1",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#4B7930",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#4B7930",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#6db046",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#4b7930",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "1df37c54.681d74",
        "type": "ui_group",
        "z": "",
        "name": "Main Control",
        "tab": "355d7d12.6d7412",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "48a38e5e.ad6eb",
        "type": "ui_tab",
        "z": "",
        "name": "Settings",
        "icon": "settings",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d9188a2e.55c2a8",
        "type": "ui_group",
        "z": "",
        "name": "Grainfather Controller",
        "tab": "48a38e5e.ad6eb",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8225a265.09c9b",
        "type": "ui_group",
        "z": "",
        "name": "Timer",
        "tab": "355d7d12.6d7412",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3f80edac.961f72",
        "type": "Generic BLE",
        "z": "",
        "localName": "Grain",
        "address": "bb:a0:50:0e:0a:12",
        "uuid": "bba0500e0a12",
        "muteNotifyEvents": false,
        "operationTimeout": "",
        "characteristics": []
    },
    {
        "id": "486b3eb4.b3723",
        "type": "ui_group",
        "z": "",
        "name": "Notifications",
        "tab": "48a38e5e.ad6eb",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6500c5a.452263c",
        "type": "ui_group",
        "z": "",
        "name": "Batch selection",
        "tab": "930c0a18.6b4938",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "930c0a18.6b4938",
        "type": "ui_tab",
        "z": "",
        "name": "Brewfather",
        "icon": "fa-list-alt",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5a19c4db.dbdd2c",
        "type": "ui_group",
        "z": "",
        "name": "Brew Session",
        "tab": "355d7d12.6d7412",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a56d0f41.236f6",
        "type": "ui_group",
        "z": "",
        "name": "Brewfather",
        "tab": "48a38e5e.ad6eb",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f64cef87.3ae2e",
        "type": "ui_group",
        "z": "",
        "name": "Current batch",
        "tab": "930c0a18.6b4938",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1539fca2.e3e2c3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1df37c54.681d74",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "b3f2ec24.29c96",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.characteristics[\"0003cdd100001000800000805f9b0131\"]",
        "targetType": "msg",
        "x": 1290,
        "y": 220,
        "wires": []
    },
    {
        "id": "d2eeaa0a.f44ab8",
        "type": "switch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "property": "message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "B",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "E",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "T",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "V",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "W",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "X",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Y",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 12,
        "x": 1810,
        "y": 420,
        "wires": [
            [
                "efbe3f05.d87f2",
                "3b351db2.6a8832"
            ],
            [
                "a34e3d37.c0939",
                "fb93cc0.59f3638"
            ],
            [
                "84deb30e.2da68",
                "9f3b97c9.4e4fe8"
            ],
            [
                "b42404c3.ad47c8",
                "3c5278cd.ca2a78",
                "7e0e682f.5b34a8"
            ],
            [
                "e9c8c4ea.a08158",
                "6cc6d902.576598"
            ],
            [
                "c8b01438.50c4f8",
                "22c26e7c.acbc12"
            ],
            [
                "4cf2931f.a6b6fc",
                "a8c00bf5.937f48"
            ],
            [
                "4df96f3.1727b9",
                "d6756a8c.6a8ee8"
            ],
            [
                "cab7e49e.1f8b68",
                "db424521.23c928"
            ],
            [
                "33f8c2c3.008bee",
                "ff72ff6f.df808"
            ],
            [
                "5bc571d1.43af",
                "b7dc68c4.dcdc98"
            ],
            [
                "2133a47e.5d109c",
                "83b06089.5c7af"
            ]
        ]
    },
    {
        "id": "33f8c2c3.008bee",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "X",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 560,
        "wires": []
    },
    {
        "id": "5bc571d1.43af",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Y",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 600,
        "wires": []
    },
    {
        "id": "4cf2931f.a6b6fc",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "T",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 440,
        "wires": []
    },
    {
        "id": "c8b01438.50c4f8",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "I",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 400,
        "wires": []
    },
    {
        "id": "cab7e49e.1f8b68",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "W",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 520,
        "wires": []
    },
    {
        "id": "84deb30e.2da68",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "C",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 280,
        "wires": []
    },
    {
        "id": "efbe3f05.d87f2",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "A",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 200,
        "wires": []
    },
    {
        "id": "a34e3d37.c0939",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "B",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 240,
        "wires": []
    },
    {
        "id": "b42404c3.ad47c8",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "E",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 320,
        "wires": []
    },
    {
        "id": "cf0ea885.b26888",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode response",
        "func": "var raw = msg.payload;\n\nif(raw.length > 1) {\n    msg.message = raw.substr(0, 1);\n    \n    var n = raw.indexOf(\"Z\");\n    var trimmed = raw;\n    if(n != -1) {\n        trimmed = raw.substring(1, n - 1);\n    }\n    else {\n        trimmed = raw.substring(1, raw.length - 1);\n    }\n    \n    msg.parameters = trimmed.split(\",\");\n}\n\nmsg.payload = raw;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 280,
        "wires": [
            [
                "d2eeaa0a.f44ab8",
                "edd54130.402e4",
                "a0467867.1033e8",
                "5b7a230a.cce58c"
            ]
        ]
    },
    {
        "id": "edd54130.402e4",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1710,
        "y": 280,
        "wires": []
    },
    {
        "id": "f6b97fc6.07873",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Initialize Raw",
        "topic": "",
        "payload": " ",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 1990,
        "y": 140,
        "wires": [
            [
                "1f325fe7.4f74"
            ]
        ]
    },
    {
        "id": "2133a47e.5d109c",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Unknown",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2420,
        "y": 640,
        "wires": []
    },
    {
        "id": "411c53b4.5f7cbc",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2410,
        "y": 680,
        "wires": []
    },
    {
        "id": "ff72ff6f.df808",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode Temperature (X)",
        "func": "var targetTemp = msg.parameters[0];\nvar currentTemp = msg.parameters[1];\n\n// Grainfather set target temp to 120 °C during boil\nif(targetTemp > 100.0) {\n    targetTemp = 100.0;\n}\n\nvar payload = {};\ntemperature_unit = flow.get('temperature_unit');\nif(temperature_unit === 'F') {\n    targetTemp = (targetTemp * 9 / 5) + 32;\n    currentTemp = (currentTemp * 9 / 5) + 32;\n}\n\npayload.temperature_unit = temperature_unit;\npayload.targetTemp = Number(targetTemp).toFixed(0);\npayload.currentTemp = Number(currentTemp).toFixed(1);\n\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2210,
        "y": 1180,
        "wires": [
            [
                "a8a28b0b.dc3ba8"
            ]
        ]
    },
    {
        "id": "a8c00bf5.937f48",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode Timer (T)",
        "func": "function zeropad(num) {\n    var s = \"0\" + num;\n    return s.substr(s.length - 2);\n}\n\nconst timerActive = Boolean(msg.parameters[0] === \"1\");\nconst timerPaused = flow.get('timer_paused');\nvar timerElapsed = false;\nvar timerLeftMins = 0;\nvar timerStartMins = 0;\nvar timerLeftSecs = 0;\nvar timerTitle = \" \";\nvar timerFormatted = \"--\";\n\nflow.set('timer_active', timerActive);\ntimerLeftSecs = Number(msg.parameters[3]);\ntimerLeftMins = Number(msg.parameters[1]) - 1 + Math.floor(timerLeftSecs / 60);\ntimerStartMins = Number(msg.parameters[2]);\n    \ntimerLeftSecs = timerLeftSecs % 60;\nif(timerLeftMins < 0) {\n    timerLeftMins = 0;\n}\n\nif(timerActive || timerLeftMins > 0 || timerLeftSecs > 0) {\n    if(timerLeftMins <= 59) {\n        //timerFormatted = \"MM:SS\";\n        if(timerLeftMins === 0 && timerLeftSecs === 0) {\n            timerElapsed = true;\n        }\n        timerFormatted = timerLeftMins.toString() + \":\" + zeropad(timerLeftSecs);\n    }\n    else {\n        //timerFormatted = \"H:MM:SS\";\n        var hours = Math.floor(timerLeftMins / 60);\n        var mins = timerLeftMins % 60;\n        timerFormatted = hours.toString() + \":\" + zeropad(mins) + \":\" + zeropad(timerLeftSecs);\n    }\n}\n\nflow.set('timer_elapsed', timerElapsed);\nflow.set('timer_start_mins', timerStartMins);\nflow.set('timer_left_mins', timerLeftMins);\nflow.set('timer_left_secs', timerLeftSecs);\n\nmsg.payload = {\n    'timervalue':timerFormatted,\n    'timerleftmins':timerLeftMins,\n    'timerleftmecs':timerLeftSecs,\n    'timerstartmins':timerStartMins,\n    'timeractive':timerActive,\n    'timerpaused':timerPaused,\n    'timerelapsed':timerElapsed};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2210,
        "y": 840,
        "wires": [
            [
                "2113cd0f.134c52",
                "dc4d7b2d.61a548",
                "f02efb47.4ccc68"
            ]
        ]
    },
    {
        "id": "b7dc68c4.dcdc98",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode Status (Y)",
        "func": "const heatPower = Boolean(msg.parameters[0] === \"1\");\nconst pumpPower = Boolean(msg.parameters[1] === \"1\");\nconst autoMode = Boolean(msg.parameters[2] === \"1\");\nconst stageRamp = Boolean(msg.parameters[3] === \"1\");\nconst interactionMode = Boolean(msg.parameters[4] === \"1\");\nconst interactionCode = msg.parameters[5];\nconst stageNumber = Number(msg.parameters[6]);\nconst delayedHeat = Boolean(msg.parameters[7] === \"1\");\n\nvar interaction = \"\";\nswitch(interactionCode) {\n    case \"1\":\n        interaction = \"Add water\";\n        break;\n    case \"2\":\n        interaction = \"Add grain\";\n        break;\n    case \"3\":\n        interaction = \"Mash finished\";\n        break;\n    case \"4\":\n        interaction = \"Sparge\";\n        break;\n    case \"5\":\n        interaction = \"Boil reached\";\n        break;\n    case \"6\":\n        interaction = \"Boil finished\";\n        //interaction = \"Start hopstand\";\n        break;\n    case \"7\":\n        interaction = \"Hopstand finished\";\n        break;\n}\n\nmsg.payload = {\n    'heatpower':heatPower,\n    'pumppower':pumpPower,\n    'automode':autoMode,\n    'stageramp':stageRamp,\n    'interactionmode':interactionMode,\n    'interactioncode':interactionCode,\n    'interaction':interaction,\n    'stagenumber':stageNumber,\n    'delayedheat':delayedHeat\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2010,
        "y": 1320,
        "wires": [
            [
                "a8a972b4.9eef5",
                "2ceaf8ac.c4b598",
                "adfcc5a4.e6b1a8",
                "787fce9c.18755",
                "dcb368c9.45a218"
            ]
        ]
    },
    {
        "id": "77e120cb.3a7ec",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "group": "1df37c54.681d74",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Pump",
        "tooltip": "",
        "color": "#FFFFFF",
        "bgcolor": "{{colour}}",
        "icon": "",
        "payload": "P",
        "payloadType": "str",
        "topic": "",
        "x": 2710,
        "y": 1400,
        "wires": [
            [
                "bce0ab71.378748"
            ]
        ]
    },
    {
        "id": "2752d604.f66c0a",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "group": "1df37c54.681d74",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Heat",
        "tooltip": "",
        "color": "#FFFFFF",
        "bgcolor": "{{colour}}",
        "icon": "",
        "payload": "H",
        "payloadType": "str",
        "topic": "",
        "x": 2710,
        "y": 1320,
        "wires": [
            [
                "bce0ab71.378748"
            ]
        ]
    },
    {
        "id": "36967178.bc09fe",
        "type": "ui_level",
        "z": "9dea0b26.bbbe98",
        "group": "1df37c54.681d74",
        "order": 5,
        "width": 1,
        "height": 3,
        "name": "Heat Level",
        "label": "",
        "colorHi": "#00b33c",
        "colorWarn": "#00b33c",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": "3",
        "colorschema": "valuedriven",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": true,
        "tickmode": "off",
        "peakmode": false,
        "peaktime": 3000,
        "x": 2730,
        "y": 1080,
        "wires": []
    },
    {
        "id": "db424521.23c928",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode Status (W)",
        "func": "const heatPowerPct = Number(msg.parameters[0]);\nconst timerPaused = Boolean(msg.parameters[1] === \"1\");\nconst stepMashMode = Boolean(msg.parameters[2] === \"1\");\nconst recipeInterrupted = Boolean(msg.parameters[3] === \"1\");\nconst manualPower = Boolean(msg.parameters[4] === \"1\");\nconst spargeWaterAlert = Boolean(msg.parameters[5] === \"1\");\n\nflow.set('timer_paused', timerPaused);\nflow.set('sparge_heat_alert', spargeWaterAlert);\n\nnode.send([{'payload':heatPowerPct}, null, null, null, null, null]);\nnode.send([null, {'payload':timerPaused}, null, null, null, null]);\nnode.send([null, null, {'payload':stepMashMode}, null, null, null]);\nnode.send([null, null, null, {'payload':recipeInterrupted}, null, null]);\nnode.send([null, null, null, null, {'payload':manualPower}, null]);\nnode.send([null, null, null, null, null, {'payload':spargeWaterAlert}]);\n\nmsg.payload = {\n    'heatpowerpct':heatPowerPct,\n    'timerpaused':timerPaused,\n    'stepmashmode':stepMashMode,\n    'recipeinterrupted¨':recipeInterrupted,\n    'manualpower':manualPower,\n    'spargeWaterAlert':spargeWaterAlert\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2190,
        "y": 1000,
        "wires": [
            [
                "c65e1ece.7d4d6",
                "8b92ed08.f1527",
                "e43ed08c.e0f55"
            ]
        ]
    },
    {
        "id": "a49530b4.09b39",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "1df37c54.681d74",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "Heat",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2810,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f693bae1.855238",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Format display",
        "func": "if(msg.payload === 0) {\n    msg.payload = \"Off\";\n}\nelse {\n    msg.payload = msg.payload + \"%\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2660,
        "y": 1020,
        "wires": [
            [
                "a49530b4.09b39"
            ]
        ]
    },
    {
        "id": "a8a972b4.9eef5",
        "type": "switch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "property": "payload.heatpower",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2330,
        "y": 1320,
        "wires": [
            [
                "8bb616a.62b5ee8"
            ],
            [
                "bb2dab1a.27cec8"
            ]
        ]
    },
    {
        "id": "8bb616a.62b5ee8",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "Heat On",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "#DD0000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 1300,
        "wires": [
            [
                "2752d604.f66c0a"
            ]
        ]
    },
    {
        "id": "bb2dab1a.27cec8",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "Heat Off",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "#595959",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 1340,
        "wires": [
            [
                "2752d604.f66c0a"
            ]
        ]
    },
    {
        "id": "2ceaf8ac.c4b598",
        "type": "switch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "property": "payload.pumppower",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2330,
        "y": 1400,
        "wires": [
            [
                "bb4f926c.9206e"
            ],
            [
                "eb1126f9.7cfe58"
            ]
        ]
    },
    {
        "id": "bb4f926c.9206e",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "Pump On",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "#00BB00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 1380,
        "wires": [
            [
                "77e120cb.3a7ec"
            ]
        ]
    },
    {
        "id": "eb1126f9.7cfe58",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "Pump Off",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "#595959",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 1420,
        "wires": [
            [
                "77e120cb.3a7ec"
            ]
        ]
    },
    {
        "id": "24c60883.250118",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 280,
        "wires": [
            [
                "d324d344.c9bec"
            ]
        ]
    },
    {
        "id": "26bae695.25082a",
        "type": "ui_switch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "label": "Connect automatically",
        "tooltip": "",
        "group": "d9188a2e.55c2a8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1140,
        "y": 380,
        "wires": [
            [
                "85a75268.f463e"
            ]
        ]
    },
    {
        "id": "bc38eefe.ada82",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "group": "d9188a2e.55c2a8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Connect",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "connect",
        "payloadType": "str",
        "topic": "",
        "x": 420,
        "y": 220,
        "wires": [
            [
                "2a13b630.b9e87a"
            ]
        ]
    },
    {
        "id": "c9ea0ca5.44f82",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "d9188a2e.55c2a8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1620,
        "y": 640,
        "wires": []
    },
    {
        "id": "a0467867.1033e8",
        "type": "trigger",
        "z": "9dea0b26.bbbe98",
        "op1": "",
        "op2": "disconnected",
        "op1type": "nul",
        "op2type": "str",
        "duration": "15",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "disconnect after 15 secs",
        "x": 1330,
        "y": 620,
        "wires": [
            [
                "5b7a230a.cce58c",
                "c9ea0ca5.44f82",
                "96f0c2.6fd37f4"
            ]
        ]
    },
    {
        "id": "5b7a230a.cce58c",
        "type": "trigger",
        "z": "9dea0b26.bbbe98",
        "op1": "connected",
        "op2": "",
        "op1type": "str",
        "op2type": "nul",
        "duration": "15",
        "extend": true,
        "units": "s",
        "reset": "disconnected",
        "bytopic": "all",
        "name": "connected",
        "x": 1290,
        "y": 700,
        "wires": [
            [
                "c9ea0ca5.44f82",
                "96f0c2.6fd37f4",
                "7d31754e.df9bcc"
            ]
        ]
    },
    {
        "id": "d9018eca.ca9e9",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Initialize",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "5e825722.30d588",
                "fbd65c91.f4f7a",
                "e2a4d62a.77bcd8"
            ]
        ]
    },
    {
        "id": "5e825722.30d588",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connection",
                "pt": "flow",
                "to": "disconnected",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "disconnected",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 540,
        "wires": [
            [
                "c9ea0ca5.44f82",
                "853fd41f.fb4a28"
            ]
        ]
    },
    {
        "id": "2a13b630.b9e87a",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "Subscribe",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notify\":true,\"period\":0}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 220,
        "wires": [
            [
                "b79bbad8.1ee5f8"
            ]
        ]
    },
    {
        "id": "fbd65c91.f4f7a",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Set defaults",
        "func": "var defaults_set = flow.get('defaults_set') || false;\nif(defaults_set === false) {\n    flow.set('auto_connect', false);\n    flow.set('temperature_unit', 'C');\n    flow.set('defaults_set', true);\n    flow.set('pushover_enabled', false);\n    flow.set('brewfather_enabled', false);\n    flow.set('display_sparge_counter', false);\n    flow.set('display_sparge_heat_reminder', false);\n}\n\nflow.set('timer_active', false);\nflow.set('timer_paused', false);\nflow.set('timer_elapsed', false);\nflow.set('timer_start_mins', 0);\nflow.set('timer_left_mins', 0);\nflow.set('timer_left_secs', 0);\nflow.set('sticky_boil_addition_alert', false);\nflow.set('sticky_temperature_alarm', false);\nflow.set('ble_overflow', null);\nflow.set('brew_session_active', false);\nflow.set('new_timer_hours', 0);\nflow.set('new_timer_minutes', 0);\nflow.set('delayed_session_hours', 0);\nflow.set('delayed_session_minutes', 0);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 380,
        "wires": [
            [
                "96bf6cb3.8e68c",
                "d1a86442.7b18f8",
                "423b9d6f.4141d4",
                "e49595ca.f39708",
                "b610ed95.9bd7e",
                "d95c93f4.63de3",
                "1862da4c.900f46"
            ]
        ]
    },
    {
        "id": "96bf6cb3.8e68c",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "auto_connect",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 380,
        "wires": [
            [
                "26bae695.25082a"
            ]
        ]
    },
    {
        "id": "4431c780.445d38",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Connect",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "x": 420,
        "y": 300,
        "wires": [
            [
                "b0c3c34b.8e94"
            ]
        ]
    },
    {
        "id": "b0c3c34b.8e94",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Auto connect",
        "func": "var auto_connect = flow.get('auto_connect') || false;\nvar connected = (flow.get('connection') === \"connected\") || false;\n\nif(auto_connect && !connected) {\n    msg.payload = \"auto connect\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 300,
        "wires": [
            [
                "2a13b630.b9e87a"
            ]
        ]
    },
    {
        "id": "85a75268.f463e",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "auto_connect",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 380,
        "wires": [
            [
                "b0c3c34b.8e94"
            ]
        ]
    },
    {
        "id": "853fd41f.fb4a28",
        "type": "ui_template",
        "z": "9dea0b26.bbbe98",
        "group": "1df37c54.681d74",
        "name": "BLE icon",
        "order": 1,
        "width": 1,
        "height": 1,
        "format": "<div>\n<ng-md-icon ng-if=\"msg.payload === 'connected'\" icon=\"bluetooth\" size=\"36\"></ng-md-icon>\n<!-- <ng-md-icon ng-if=\"msg.payload === 'disconnected'\" icon=\"bluetooth_disabled\" size=\"40\"></ng-md-icon> -->\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1800,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "96f0c2.6fd37f4",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connection",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "ble_overflow",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 700,
        "wires": [
            [
                "853fd41f.fb4a28"
            ]
        ]
    },
    {
        "id": "b79bbad8.1ee5f8",
        "type": "Generic BLE in",
        "z": "9dea0b26.bbbe98",
        "name": "Grainfather Read",
        "genericBle": "3f80edac.961f72",
        "useString": false,
        "notification": true,
        "x": 830,
        "y": 220,
        "wires": [
            [
                "b3f2ec24.29c96",
                "24c60883.250118"
            ]
        ]
    },
    {
        "id": "bce0ab71.378748",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Format GF command",
        "func": "function pad(str) {\n    while(str.length < 19) {\n        str = str + \" \";\n    }\n    return str.substr(0, 19);\n}\n\nvar command = Buffer.from(pad(msg.payload)).toString('hex');\n\nvar payload = {\"0003cdd200001000800000805f9b0131\":command};\nmsg.payload = payload;\n//msg.payload = JSON.stringify(payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3780,
        "y": 1240,
        "wires": [
            [
                "fa3b9cc2.52978",
                "4af1ed2.902d914"
            ]
        ]
    },
    {
        "id": "28188956.6c5066",
        "type": "Generic BLE out",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "genericBle": "3f80edac.961f72",
        "x": 4150,
        "y": 1260,
        "wires": []
    },
    {
        "id": "fa3b9cc2.52978",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 4030,
        "y": 1200,
        "wires": []
    },
    {
        "id": "1f325fe7.4f74",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "Clear All",
        "group": "321f8fea.8d69d",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Clear All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": " ",
        "payloadType": "str",
        "topic": "",
        "x": 2160,
        "y": 140,
        "wires": [
            [
                "efbe3f05.d87f2",
                "a34e3d37.c0939",
                "84deb30e.2da68",
                "b42404c3.ad47c8",
                "c8b01438.50c4f8",
                "4cf2931f.a6b6fc",
                "cab7e49e.1f8b68",
                "33f8c2c3.008bee",
                "5bc571d1.43af",
                "2133a47e.5d109c",
                "e9c8c4ea.a08158",
                "4df96f3.1727b9"
            ]
        ]
    },
    {
        "id": "8a41ea03.659918",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Get current boil temp",
        "topic": "",
        "payload": "M",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3800,
        "y": 500,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "a8a28b0b.dc3ba8",
        "type": "ui_template",
        "z": "9dea0b26.bbbe98",
        "group": "1df37c54.681d74",
        "name": "Temperature",
        "order": 2,
        "width": 4,
        "height": 4,
        "format": "<style>\n    .nr-dashboard-template h1 {\n    font-size: .875em;\n    font-weight: normal;\n    text-align: center;\n    margin-top: 0;\n    margin-bottom: 0;\n    }\n    \n    .nr-dashboard-template h2 {\n    font-size: 3.5em;\n    text-align: center;\n    margin-top: 0;\n    margin-bottom: 0;\n    }\n    \n   \n   div {\n    max-width: 100%;\n   }\n   \n   a:link {\n    color: white; \n    background-color: transparent; \n    text-decoration: none;\n}\n\na:visited {\n    color: white;\n    background-color: transparent;\n    text-decoration: none;\n}\n\n#Temperature-Display-Div {\n    visibility: visible;\n   }  \n</style>\n\n<div id = \"Temperature-Display-Div\">\n<h1>Temperature (°{{msg.payload.temperature_unit}})</h1>\n<h2>{{msg.payload.currentTemp}}</h2>\n<h1>&nbsp;</h1>\n<h1>Target (°{{msg.payload.temperature_unit}})</h1>\n<h2>{{msg.payload.targetTemp}}</h2>\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 2710,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "6cb11f95.fde87",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Send multiple commands",
        "func": "msg.payload.forEach(sendCommand);\n\nfunction sendCommand(item) {\n  node.send([{'payload':item}]);\n}\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3450,
        "y": 1240,
        "wires": [
            [
                "bce0ab71.378748"
            ]
        ]
    },
    {
        "id": "79bbb1df.ad06",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Get controller settings",
        "func": "msg.payload = ['g', 'X', 'M'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2240,
        "y": 1120,
        "wires": [
            [
                "6cb11f95.fde87"
            ]
        ]
    },
    {
        "id": "7d31754e.df9bcc",
        "type": "delay",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2010,
        "y": 1120,
        "wires": [
            [
                "79bbb1df.ad06"
            ]
        ]
    },
    {
        "id": "4af1ed2.902d914",
        "type": "delay",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "4",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 3990,
        "y": 1260,
        "wires": [
            [
                "28188956.6c5066"
            ]
        ]
    },
    {
        "id": "e9c8c4ea.a08158",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "F",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 360,
        "wires": []
    },
    {
        "id": "4df96f3.1727b9",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "321f8fea.8d69d",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "V",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 480,
        "wires": []
    },
    {
        "id": "6cc6d902.576598",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode Firmware (F)",
        "func": "var firmware = msg.parameters[0];\nmsg.payload = firmware;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2100,
        "y": 240,
        "wires": [
            [
                "22f23340.8e75fc"
            ]
        ]
    },
    {
        "id": "d6756a8c.6a8ee8",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode voltage and units (V)",
        "func": "var voltage = msg.parameters[0];\nvar units = msg.parameters[1];\n\nnode.send([{'payload':voltage},null]);\nnode.send([null,{'payload':units}]);\n\n//return msg;",
        "outputs": 2,
        "noerr": 0,
        "x": 2220,
        "y": 940,
        "wires": [
            [],
            [
                "91c7a2c6.a3d6d"
            ]
        ],
        "outputLabels": [
            "voltage",
            "units"
        ]
    },
    {
        "id": "91c7a2c6.a3d6d",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Set flow.temperature_unit",
        "func": "if(msg.payload === '0') {\n    flow.set('temperature_unit', 'F');\n}\nelse {\n    flow.set('temperature_unit', 'C');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2600,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "85deae7f.7cd6b",
        "type": "ui_template",
        "z": "9dea0b26.bbbe98",
        "group": "8225a265.09c9b",
        "name": "Timer",
        "order": 1,
        "width": 6,
        "height": 2,
        "format": "<style>\n    .nr-dashboard-template h1 {\n    font-size: .875em;\n    font-weight: normal;\n    text-align: center;\n    margin-top: 0;\n    margin-bottom: 0;\n    }\n    \n    .nr-dashboard-template h2 {\n    font-size: 3.5em;\n    text-align: center;\n    margin-top: 0;\n    margin-bottom: 0;\n    }\n    \n   \n   div {\n    max-width: 100%;\n   }\n   \n   a:link {\n    color: white; \n    background-color: transparent; \n    text-decoration: none;\n}\n\na:visited {\n    color: white;\n    background-color: transparent;\n    text-decoration: none;\n}\n\n.blinking {\n  animation: blinker 1s linear infinite;\n}\n\n@keyframes blinker {\n  50% {\n    opacity: 0;\n  }\n}\n#Timer-Display-Div-Static {\n    display: {{msg.payload.static}};\n   }  \n#Timer-Display-Div-Flashing {\n    display: {{msg.payload.flashing}};\n   }  \n</style>\n\n<div id = \"Timer-Display-Div-Static\">\n<h1>{{msg.payload.timertitle}}</h1>\n<h2>{{msg.payload.timervalue}}</h2>\n</div>\n<div id = \"Timer-Display-Div-Flashing\">\n<h1>{{msg.payload.timertitle}}</h1>\n<h2 class=\"blinking\">{{msg.payload.timervalue}}</h2>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 2950,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "9f4f2aaf.39d9a8",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "Arrow Up",
        "group": "1df37c54.681d74",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "#595959",
        "icon": "expand_less",
        "payload": "U",
        "payloadType": "str",
        "topic": "",
        "x": 3360,
        "y": 980,
        "wires": [
            [
                "bce0ab71.378748"
            ]
        ]
    },
    {
        "id": "b178a5fb.a4ab68",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "Arrow Down",
        "group": "1df37c54.681d74",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "#595959",
        "icon": "expand_more",
        "payload": "D",
        "payloadType": "str",
        "topic": "",
        "x": 3370,
        "y": 1020,
        "wires": [
            [
                "bce0ab71.378748"
            ]
        ]
    },
    {
        "id": "8d412b05.7d2508",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Hide Raw Messages",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"GF_Connect_Raw_Messages\"]}}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 2640,
        "y": 200,
        "wires": [
            [
                "641fed3f.0bb3b4"
            ]
        ]
    },
    {
        "id": "641fed3f.0bb3b4",
        "type": "ui_ui_control",
        "z": "9dea0b26.bbbe98",
        "name": "Raw Messages Group",
        "x": 2900,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bc89f6ab.f1fe48",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Show Raw Messages",
        "topic": "",
        "payload": "{\"group\":{\"show\":[\"GF_Connect_Raw_Messages\"]}}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 2640,
        "y": 240,
        "wires": [
            [
                "641fed3f.0bb3b4"
            ]
        ]
    },
    {
        "id": "d1a86442.7b18f8",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "defaults set out",
        "links": [
            "18ef90.616fd071",
            "4296f61b.e2b988",
            "6c5f2523.9f24ac",
            "87a9f7aa.085638",
            "9ba75d3a.6302f",
            "a100da8f.0b0ff8",
            "b2f36278.67c2b",
            "d9db71ec.8911c",
            "e328018c.e2a5f"
        ],
        "x": 795,
        "y": 360,
        "wires": []
    },
    {
        "id": "b2f36278.67c2b",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "d1a86442.7b18f8"
        ],
        "x": 2375,
        "y": 1280,
        "wires": [
            [
                "bb2dab1a.27cec8",
                "eb1126f9.7cfe58",
                "599bb149.3e0ac"
            ]
        ]
    },
    {
        "id": "e17eb87a.f8de18",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"timertitle\":\" \",\"timervalue\":\"--\",\"static\":\"inline\",\"flashing\":\"none\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2600,
        "y": 860,
        "wires": [
            [
                "85deae7f.7cd6b",
                "5585b0fa.07b77"
            ]
        ]
    },
    {
        "id": "9ba75d3a.6302f",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "d1a86442.7b18f8"
        ],
        "x": 2435,
        "y": 900,
        "wires": [
            [
                "e17eb87a.f8de18",
                "8b92ed08.f1527",
                "e43ed08c.e0f55"
            ]
        ]
    },
    {
        "id": "599bb149.3e0ac",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"targetTemp\":\"--\",\"currentTemp\":\"--\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 1260,
        "wires": [
            [
                "a8a28b0b.dc3ba8"
            ]
        ]
    },
    {
        "id": "5ff76da9.ada754",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Simple test recipe",
        "func": "var testRecipe = [\n    \"R10,1,5,6,\", // 10 min boil, 1 mash step, 5L mash vol, 6 L sparge vol\n    \"0,0,0,0,0,\", // No water tratment alert, no sparge counter, no sparge alert, no delayed session, do not skip start\n    \"SIMPLE TEST\", // Name of recipe\n    \"0,1,0,0,\", // No hop stand, 1 boil addition, no boil power mode, no strike temp mode\n    \"5\", // Boil addition 1 at 5 mins remaining\n    \"25:5,\" // Mash step 1, 25°C for 5 mins\n    ];\nmsg.payload = testRecipe;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3950,
        "y": 940,
        "wires": [
            [
                "46b9479a.5828e8",
                "972a9ebc.ebca7"
            ]
        ]
    },
    {
        "id": "b8df316.e3d76d",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3740,
        "y": 940,
        "wires": [
            [
                "5ff76da9.ada754"
            ]
        ]
    },
    {
        "id": "46b9479a.5828e8",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 4250,
        "y": 960,
        "wires": []
    },
    {
        "id": "23588e4f.8411d2",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Set boil temp 33°C",
        "topic": "",
        "payload": "E33,",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3810,
        "y": 420,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "d25d9d1d.af548",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Set boil temp 99.5°C",
        "topic": "",
        "payload": "E99.5,",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3810,
        "y": 460,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "f5fa6744.cee1a8",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Test recipe with all enabled",
        "func": "var testRecipe = [\n    \"R10,2,5,6,\", // 10 min boil, 2 mash step, 5L mash vol, 6 L sparge vol\n    \"1,1,1,0,0,\", // Water tratment alert, Sparge counter, sparge alert, no delayed session, do not skip start\n    \"TEST WITH ALL\", // Name of recipe\n    \"5,1,0,0,\", // 5 min hop stand, 1 boil addition, no boil power mode, no strike temp mode\n    \"5\", // Boil addition 1 at 5 mins remaining\n    \"25:5,\", // Mash step 1, 25°C for 5 mins\n    \"28:5,\" // Mash step 1, 25°C for 5 mins\n    ];\nmsg.payload = testRecipe;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3940,
        "y": 980,
        "wires": [
            [
                "46b9479a.5828e8",
                "972a9ebc.ebca7"
            ]
        ]
    },
    {
        "id": "281973ec.2a2b1c",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3740,
        "y": 980,
        "wires": [
            [
                "f5fa6744.cee1a8"
            ]
        ]
    },
    {
        "id": "3d45c775.350518",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Simple with delay recipe",
        "func": "var testRecipe = [\n    \"R2,1,5,6,\", // 2 min boil, 1 mash step, 5L mash vol, 6 L sparge vol\n    \"0,0,0,1,0,\", // No water tratment alert, no sparge counter, no sparge alert, delayed session, do not skip start\n    \"SIMPLE DELAY\", // Name of recipe\n    \"0,1,0,0,\", // No hop stand, 2 boil additions, no boil power mode, no strike temp mode\n    \"1\", // Boil addition 1 at 3 mins remaining\n    \"25:5,\", // Mash step 1, 25°C for 5 mins\n    \"1,60\" // Delay session 1:00\n    ];\nmsg.payload = testRecipe;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3970,
        "y": 1020,
        "wires": [
            [
                "46b9479a.5828e8",
                "972a9ebc.ebca7"
            ]
        ]
    },
    {
        "id": "665526a1.19c698",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3740,
        "y": 1020,
        "wires": [
            [
                "3d45c775.350518"
            ]
        ]
    },
    {
        "id": "33b407ef.e8da98",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Delayed heat 4:00",
        "topic": "",
        "payload": "B4,60,",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3810,
        "y": 580,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "c85f3ea5.c0a8d",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Sparge progress 1",
        "topic": "",
        "payload": "b$1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3810,
        "y": 640,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "4acad1c8.831e7",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Sparge progress 2",
        "topic": "",
        "payload": "b$2",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3810,
        "y": 680,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "25b410d4.baa87",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Cancel Timer",
        "topic": "",
        "payload": "C",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3790,
        "y": 720,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "7d5e8b18.24e2f4",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Cancel or finish session",
        "topic": "",
        "payload": "F",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3800,
        "y": 760,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "485448e6.85e698",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Interaction complete",
        "topic": "",
        "payload": "I",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3790,
        "y": 840,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "ee14d066.4d833",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Reset recipe interrupted",
        "topic": "",
        "payload": "!",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3810,
        "y": 880,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "2aac4ac.48a77b6",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "Stop",
        "group": "8225a265.09c9b",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "{{textcolour}}",
        "bgcolor": "{{colour}}",
        "icon": "stop",
        "payload": "C",
        "payloadType": "str",
        "topic": "",
        "x": 3150,
        "y": 920,
        "wires": [
            [
                "1e826a71.5684b6"
            ]
        ]
    },
    {
        "id": "cf702677.f7dfa8",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "Pause/Resume",
        "group": "8225a265.09c9b",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "{{label}}",
        "tooltip": "",
        "color": "{{textcolour}}",
        "bgcolor": "{{colour}}",
        "icon": "pause",
        "payload": "G",
        "payloadType": "str",
        "topic": "",
        "x": 3180,
        "y": 880,
        "wires": [
            [
                "1e826a71.5684b6"
            ]
        ]
    },
    {
        "id": "bc61b8e9.017228",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "bad838db.5dd1c8"
        ],
        "x": 4080,
        "y": 640,
        "wires": []
    },
    {
        "id": "bad838db.5dd1c8",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "bc61b8e9.017228"
        ],
        "x": 3555,
        "y": 1200,
        "wires": [
            [
                "bce0ab71.378748"
            ]
        ]
    },
    {
        "id": "e43ed08c.e0f55",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Adjust stop button",
        "func": "const timerPaused = flow.get('timer_paused');\nconst timerActive = flow.get('timer_active');\n\nif(timerPaused || timerActive) {\n    msg.colour = \"#4B7930\";\n    msg.textcolour = \"#FFFFFF\"\n}\nelse {\n    msg.colour = \"#444444\";\n    msg.textcolour =\"#333333\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2890,
        "y": 920,
        "wires": [
            [
                "2aac4ac.48a77b6"
            ]
        ]
    },
    {
        "id": "8b92ed08.f1527",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Adjust pause/resume button",
        "func": "const timerPaused = flow.get('timer_paused');\nconst timerActive = flow.get('timer_active');\n\nmsg.label = \"Pause\";\nvar icon = \"pause\";\nif(timerPaused) {\n    msg.label = \"Resume\";\n    icon = \"play_arrow\";\n}\nconst ui_control = {'icon':icon};\nnode.send({'ui_control':ui_control});\n\nif(timerPaused || timerActive) {\n    msg.colour = \"#4B7930\";\n    msg.textcolour = \"#FFFFFF\"\n}\nelse {\n    msg.colour = \"#444444\";\n    msg.textcolour =\"#333333\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2920,
        "y": 880,
        "wires": [
            [
                "cf702677.f7dfa8"
            ]
        ]
    },
    {
        "id": "1e826a71.5684b6",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Timer enabled?",
        "func": "if(flow.get('timer_active') || flow.get('timer_paused')) {\n    if(flow.get('timer_elapsed')) {\n        msg.payload = \"T\"; // Pausing the timer when 0:00 causes wrap-around\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3420,
        "y": 900,
        "wires": [
            [
                "bce0ab71.378748"
            ]
        ]
    },
    {
        "id": "e9be2772.ca32c8",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Reset controller",
        "topic": "",
        "payload": "Z",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3780,
        "y": 340,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "5ed27c8f.9e9694",
        "type": "rbe",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.timerelapsed",
        "x": 2810,
        "y": 760,
        "wires": [
            [
                "8a3dab2c.c628e8"
            ]
        ]
    },
    {
        "id": "8a3dab2c.c628e8",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Timer notification",
        "func": "if(msg.payload.timerelapsed && (flow.get('brew_session_active') === false)) {\n    msg.payload = msg.payload.timertitle;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3010,
        "y": 760,
        "wires": [
            [
                "9e057e41.c8ba8"
            ]
        ]
    },
    {
        "id": "5f6a18e9.fae918",
        "type": "ui_switch",
        "z": "9dea0b26.bbbe98",
        "name": "Pushover enabled",
        "label": "Enable Pushover notifications",
        "tooltip": "",
        "group": "486b3eb4.b3723",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 750,
        "y": 600,
        "wires": [
            [
                "2fc03f42.298c2"
            ]
        ]
    },
    {
        "id": "423b9d6f.4141d4",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pushover_enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 600,
        "wires": [
            [
                "5f6a18e9.fae918"
            ]
        ]
    },
    {
        "id": "5bb09d60.6b9a14",
        "type": "ui_text_input",
        "z": "9dea0b26.bbbe98",
        "name": "Pushover User Key",
        "label": "User/Group Key [use RETURN to save]",
        "tooltip": "",
        "group": "486b3eb4.b3723",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": "0",
        "topic": "",
        "x": 750,
        "y": 680,
        "wires": [
            [
                "aa059608.b2a398"
            ]
        ]
    },
    {
        "id": "e49595ca.f39708",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pushover_key",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 680,
        "wires": [
            [
                "5bb09d60.6b9a14"
            ]
        ]
    },
    {
        "id": "aa4337fb.bb1708",
        "type": "ui_text_input",
        "z": "9dea0b26.bbbe98",
        "name": "Pushover API Token",
        "label": "Application Token [RETURN to save]",
        "tooltip": "",
        "group": "486b3eb4.b3723",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": "0",
        "topic": "",
        "x": 760,
        "y": 720,
        "wires": [
            [
                "3c324e7a.1b7882"
            ]
        ]
    },
    {
        "id": "b610ed95.9bd7e",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pushover_token",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 720,
        "wires": [
            [
                "aa4337fb.bb1708"
            ]
        ]
    },
    {
        "id": "2fc03f42.298c2",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pushover_enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "aa059608.b2a398",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pushover_key",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "3c324e7a.1b7882",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pushover_token",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "8aaa732b.a7ea2",
        "type": "http request",
        "z": "9dea0b26.bbbe98",
        "name": "Send pushover notification",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 820,
        "y": 840,
        "wires": [
            [
                "d1bb908b.cfcd6"
            ]
        ]
    },
    {
        "id": "ff7937eb.066718",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "Test Message",
        "group": "486b3eb4.b3723",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send Test Message",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 2620,
        "y": 700,
        "wires": [
            [
                "bbc9daad.bd2c98"
            ]
        ]
    },
    {
        "id": "bbc9daad.bd2c98",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"timerelapsed\":\"true\",\"timertitle\":\"Test message\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2800,
        "y": 700,
        "wires": [
            [
                "8a3dab2c.c628e8"
            ]
        ]
    },
    {
        "id": "d1bb908b.cfcd6",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Pushower status",
        "func": "if (msg.payload.status) {\n    msg.payload = \"Status: OK\";\n}\nelse {\n    msg.payload = \"Error: \" + msg.payload.errors[0];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 840,
        "wires": [
            [
                "e2a4d62a.77bcd8"
            ]
        ]
    },
    {
        "id": "e2a4d62a.77bcd8",
        "type": "ui_template",
        "z": "9dea0b26.bbbe98",
        "group": "486b3eb4.b3723",
        "name": "Pushover status",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1300,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "c791c4b0.9df1b8",
        "type": "json",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2910,
        "y": 1640,
        "wires": [
            [
                "ad8c0cc9.0c17c",
                "a60a3068.d2378"
            ]
        ]
    },
    {
        "id": "61bfaf7a.88de3",
        "type": "file in",
        "z": "9dea0b26.bbbe98",
        "name": "Simple Test batch",
        "filename": "/home/pi/gfconnect-files/Brewfather_BATCH_16_SimpleTest_20200421.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2730,
        "y": 1640,
        "wires": [
            [
                "c791c4b0.9df1b8"
            ]
        ]
    },
    {
        "id": "ee16d1ca.98a71",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 2540,
        "y": 1640,
        "wires": [
            [
                "61bfaf7a.88de3"
            ]
        ]
    },
    {
        "id": "ad8c0cc9.0c17c",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 3150,
        "y": 1640,
        "wires": []
    },
    {
        "id": "105c2bbe.fec7b4",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode batch",
        "func": "var recipe = msg.payload.recipe;\nvar mash = recipe.mash;\nvar boilSteps = msg.payload.boilSteps;\nvar boilTime = recipe.boilTime;\nvar delayedSessionVal = msg.delay > 0 ? \"1\" : \"0\";\nvar displaySpargeCounter = flow.get('display_sparge_counter') ? \"1\" : \"0\";\nvar displaySpargeHeatReminder = flow.get('display_sparge_heat_reminder') ? \"1\" : \"0\";\n\nvar brewSession = {\n    'recipeName':recipe.name,\n    'batchName':msg.payload.name,\n    'batchNumber':msg.payload.batchNo,\n    'mashWaterAmount':recipe.data.mashWaterAmount.toFixed(1),\n    'spargeWaterAmount':recipe.data.spargeWaterAmount.toFixed(1),\n    'boilStage':0,\n    'boilTime':recipe.boilTime,\n    'hopStandTime':recipe.hopStandMinutes,\n    'boilAdditions':[],\n    'mashSteps':[],\n    'stageTitles':[\"\"]\n}\n\nvar gfRecipe = [];\ngfRecipe[0] = \"R\" + recipe.boilTime.toString() + \",\" + mash.steps.length.toString() + \",\" + recipe.data.mashWaterAmount.toFixed(1).toString()  + \",\" + recipe.data.spargeWaterAmount.toFixed(1).toString() + \",\";\ngfRecipe[1] = \"0,\" + displaySpargeCounter + \",\" + displaySpargeHeatReminder + \",\" + delayedSessionVal + \",0,\";\nif(msg.delay > 0) {\n    brewSession.stageTitles[0] = \"Delayed session starting in\";\n}\ngfRecipe[2] = recipe.name.toUpperCase();\ngfRecipe[3] = recipe.hopStandMinutes.toString() +\",\" + boilSteps.length.toString() + \",0,0,\";\nboilSteps.forEach(boilAdditions);\nfunction boilAdditions(value, index, array) {\n  gfRecipe[gfRecipe.length] = value.time.toString() + \",\";\n  brewSession.boilAdditions[brewSession.boilAdditions.length] = value;\n}\nmash.steps.forEach(mashSteps);\nfunction mashSteps(value, index, array) {\n  gfRecipe[gfRecipe.length] = value.stepTemp.toString() + \":\" + value.stepTime.toString() + \",\";\n  brewSession.mashSteps[brewSession.mashSteps.length] = value;\n  brewSession.stageTitles[brewSession.stageTitles.length] = value.name || \"Mash \" + (index + 1);\n}\nbrewSession.stageTitles[brewSession.stageTitles.length] = \"Sparge\";\nbrewSession.stageTitles[brewSession.stageTitles.length] = \"Boil\";\nbrewSession.boilStage = brewSession.stageTitles.length;\nif(recipe.hopStandMinutes > 0) {\n    brewSession.stageTitles[brewSession.stageTitles.length] = \"Hop Stand\";\n    brewSession.stageTitles[brewSession.stageTitles.length] = \" \"; //\"Hop Stand Finished\";\n}\nelse {\n    brewSession.stageTitles[brewSession.stageTitles.length] = \" \"; //\"Boil Finished\";\n}\nif(msg.delay) {\n  gfRecipe[gfRecipe.length] = \"\" + msg.delay + \",60\";\n}\nflow.set('brewSession', brewSession);\nmsg.payload = gfRecipe;\n\nreturn msg;\n\n/* \nsimpleRecipe = [\n    \"R10,1,5,6,\", // 10 min boil, 1 mash step, 5L mash vol, 6 L sparge vol\n    \"0,0,0,0,0,\", // No water tratment alert, no sparge counter, no sparge alert, no delayed session, do not skip start\n    \"SIMPLE TEST\", // Name of recipe\n    \"0,1,0,0,\", // No hop stand, 1 boil addition, no boil power mode, no strike temp mode\n    \"5\", // Boil addition 1 at 5 mins remaining\n    \"25:5,\" // Mash step 1, 25°C for 5 mins\n    ];\n    \nfullRecipe = [\n    \"R10,2,5,6,\", // 10 min boil, 2 mash step, 5L mash vol, 6 L sparge vol\n    \"1,1,1,0,0,\", // Water tratment alert, Sparge counter, sparge alert, no delayed session, do not skip start\n    \"TEST WITH ALL\", // Name of recipe\n    \"5,1,0,0,\", // 5 min hop stand, 1 boil addition, no boil power mode, no strike temp mode\n    \"5\", // Boil addition 1 at 5 mins remaining\n    \"25:5,\", // Mash step 1, 25°C for 5 mins\n    \"28:5,\" // Mash step 1, 25°C for 5 mins\n    ];\n\n*/",
        "outputs": 1,
        "noerr": 0,
        "x": 3260,
        "y": 2060,
        "wires": [
            [
                "1abae4a5.1b726b",
                "6cb11f95.fde87",
                "7567b57e.215ffc"
            ]
        ]
    },
    {
        "id": "1abae4a5.1b726b",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 3510,
        "y": 2000,
        "wires": []
    },
    {
        "id": "82974fc4.a2c37",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 2520,
        "y": 1680,
        "wires": [
            [
                "766fcf49.37bc8"
            ]
        ]
    },
    {
        "id": "766fcf49.37bc8",
        "type": "file in",
        "z": "9dea0b26.bbbe98",
        "name": "Full Test batch",
        "filename": "/home/pi/gfconnect-files/Brewfather_BATCH_17_FullTest_20200421.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2720,
        "y": 1680,
        "wires": [
            [
                "c791c4b0.9df1b8"
            ]
        ]
    },
    {
        "id": "5bbc7e72.79d51",
        "type": "exec",
        "z": "4d59d092.50859",
        "command": "ls",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 60,
        "wires": [
            [
                "e6de39b0.e2c978"
            ],
            [],
            []
        ]
    },
    {
        "id": "e6de39b0.e2c978",
        "type": "change",
        "z": "4d59d092.50859",
        "name": "split and filter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(\t    $files := [$split(payload, '\\n')[$ != \"\"]];\t    $count($env('EXTENSIONS')) = 0 ? [$files] : [$files[$split($, '.')[-1] in $env('EXTENSIONS')]];\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "3e5f9707.3cbcf8",
        "type": "switch",
        "z": "4d59d092.50859",
        "name": "",
        "property": "$env('DIRECTORY')",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 80,
        "wires": [
            [
                "5bbc7e72.79d51"
            ],
            [
                "243593fa.446c6c"
            ]
        ]
    },
    {
        "id": "243593fa.446c6c",
        "type": "change",
        "z": "4d59d092.50859",
        "name": "DIRECTORY",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DIRECTORY",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "5bbc7e72.79d51"
            ]
        ]
    },
    {
        "id": "8e9436.c8ad4bc8",
        "type": "http in",
        "z": "e3bbcfee.5583",
        "name": "",
        "url": "/fileupload",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "a5fd22db.a1ff",
                "eda77493.160fa8"
            ]
        ]
    },
    {
        "id": "f542afa3.fe31b",
        "type": "http response",
        "z": "e3bbcfee.5583",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "a615d763.141108",
        "type": "subflow:4d59d092.50859",
        "z": "e3bbcfee.5583",
        "name": "",
        "env": [
            {
                "name": "DIRECTORY",
                "type": "env",
                "value": "UPLOAD_DIR"
            },
            {
                "name": "EXTENSIONS",
                "type": "env",
                "value": "EXTENSIONS"
            }
        ],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "18e2d7a2.1f11e8"
            ]
        ]
    },
    {
        "id": "c72fdd04.282d1",
        "type": "link in",
        "z": "e3bbcfee.5583",
        "name": "refreshFileDropdown",
        "links": [
            "252d7ee3.50d102",
            "810b83f8.c78a8"
        ],
        "x": 75,
        "y": 140,
        "wires": [
            [
                "a4d2786.8445e88"
            ]
        ]
    },
    {
        "id": "814a541f.60fb38",
        "type": "change",
        "z": "e3bbcfee.5583",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selectedFile",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a5fd22db.a1ff",
        "type": "change",
        "z": "e3bbcfee.5583",
        "name": "getFile",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "$env('UPLOAD_DIR')  & '/' & req.files[0].originalname",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.files[0].buffer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "7cccdb4c.b752b4"
            ]
        ]
    },
    {
        "id": "d39731ee.6d138",
        "type": "file",
        "z": "e3bbcfee.5583",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 830,
        "y": 340,
        "wires": [
            [
                "91064a7c.e7d998"
            ]
        ]
    },
    {
        "id": "4b0b687b.777528",
        "type": "inject",
        "z": "e3bbcfee.5583",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 130,
        "y": 80,
        "wires": [
            [
                "a4d2786.8445e88"
            ]
        ]
    },
    {
        "id": "79d99fc3.113a7",
        "type": "change",
        "z": "e3bbcfee.5583",
        "name": "getSelectedFile",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "$env('UPLOAD_DIR')  & '/' & $flowContext('selectedFile')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Delete File ?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 220,
        "wires": [
            [
                "a750d179.d77f1"
            ]
        ]
    },
    {
        "id": "623624a2.675eac",
        "type": "file",
        "z": "e3bbcfee.5583",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "x": 830,
        "y": 220,
        "wires": [
            [
                "810b83f8.c78a8"
            ]
        ]
    },
    {
        "id": "a750d179.d77f1",
        "type": "ui_toast",
        "z": "e3bbcfee.5583",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "topic": "",
        "name": "",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "fb09307c.e4454"
            ]
        ]
    },
    {
        "id": "fb09307c.e4454",
        "type": "switch",
        "z": "e3bbcfee.5583",
        "name": "OK ?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 220,
        "wires": [
            [
                "623624a2.675eac"
            ]
        ]
    },
    {
        "id": "45106c33.4e35d4",
        "type": "catch",
        "z": "e3bbcfee.5583",
        "name": "",
        "scope": null,
        "x": 120,
        "y": 500,
        "wires": [
            [
                "d51c2870.aabd78"
            ]
        ]
    },
    {
        "id": "a833de2c.ad871",
        "type": "ui_toast",
        "z": "e3bbcfee.5583",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "d51c2870.aabd78",
        "type": "change",
        "z": "e3bbcfee.5583",
        "name": "getError",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 500,
        "wires": [
            [
                "a833de2c.ad871"
            ]
        ]
    },
    {
        "id": "810b83f8.c78a8",
        "type": "link out",
        "z": "e3bbcfee.5583",
        "name": "refreshAfterDelete",
        "links": [
            "c72fdd04.282d1"
        ],
        "x": 1135,
        "y": 220,
        "wires": []
    },
    {
        "id": "252d7ee3.50d102",
        "type": "link out",
        "z": "e3bbcfee.5583",
        "name": "refreshAfterUpload",
        "links": [
            "c72fdd04.282d1"
        ],
        "x": 1135,
        "y": 340,
        "wires": []
    },
    {
        "id": "eda77493.160fa8",
        "type": "change",
        "z": "e3bbcfee.5583",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'File ' & req.files[0].originalname & ' uploaded.'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 440,
        "wires": [
            [
                "f542afa3.fe31b"
            ]
        ]
    },
    {
        "id": "a4d2786.8445e88",
        "type": "delay",
        "z": "e3bbcfee.5583",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "a615d763.141108"
            ]
        ]
    },
    {
        "id": "c2346e4b.fa68e",
        "type": "watch",
        "z": "e3bbcfee.5583",
        "name": "",
        "files": "$(UPLOAD_DIR)",
        "recursive": "",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "a4d2786.8445e88"
            ]
        ]
    },
    {
        "id": "18e2d7a2.1f11e8",
        "type": "change",
        "z": "e3bbcfee.5583",
        "name": "options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7cccdb4c.b752b4",
        "type": "switch",
        "z": "e3bbcfee.5583",
        "name": "extensionAllowed ?",
        "property": "$env('EXTENSIONS')",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "cont",
                "v": "$split(filename, '.')[-1]",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 360,
        "wires": [
            [
                "d39731ee.6d138"
            ],
            [
                "d3f6a96f.dd3868"
            ]
        ]
    },
    {
        "id": "d3f6a96f.dd3868",
        "type": "function",
        "z": "e3bbcfee.5583",
        "name": "Error",
        "func": "node.error(`Error: only ${env.get('EXTENSIONS')} files are allowed.`, msg)\n",
        "outputs": 0,
        "noerr": 0,
        "x": 830,
        "y": 380,
        "wires": []
    },
    {
        "id": "91064a7c.e7d998",
        "type": "change",
        "z": "e3bbcfee.5583",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "252d7ee3.50d102"
            ]
        ]
    },
    {
        "id": "edc7b613.8fc7f8",
        "type": "catch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "scope": null,
        "uncaught": true,
        "x": 3760,
        "y": 220,
        "wires": [
            [
                "1ca757a6.27f6f8",
                "f2849f20.9450f"
            ]
        ]
    },
    {
        "id": "23c2c997.36a156",
        "type": "ui_toast",
        "z": "9dea0b26.bbbe98",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 4170,
        "y": 220,
        "wires": []
    },
    {
        "id": "1ca757a6.27f6f8",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "getError",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3940,
        "y": 220,
        "wires": [
            [
                "23c2c997.36a156"
            ]
        ]
    },
    {
        "id": "8b08040.4b2ed",
        "type": "http in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "url": "/brewfatherbatchupload",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 2260,
        "y": 1780,
        "wires": [
            [
                "b85ecacf.a49298",
                "28602a88.72c406"
            ]
        ]
    },
    {
        "id": "6c693001.8e7f7",
        "type": "http response",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2710,
        "y": 1780,
        "wires": []
    },
    {
        "id": "b399edae.cd45d",
        "type": "ui_template",
        "z": "9dea0b26.bbbe98",
        "group": "6500c5a.452263c",
        "name": "Upload Batch",
        "order": 1,
        "width": 6,
        "height": "3",
        "format": "<style>\n\n\n#status {\n    font-size: 0.8em;\n    font-weight: normal;\n   }  \n#upload_form {\n    margin: 0 -6px;\n}\n#file1 {\n    margin: 0 6px;\n}\n#upload_form_button {\n    width: 100% !important;\n    height: 48px;\n}\n</style>\n\n<form id=\"upload_form\" enctype=\"multipart/form-data\" method=\"post\">\n    <input type=\"file\" name=\"file1\" id=\"file1\"><br>\n    <input id=\"upload_form_button\" type=\"button\" value=\"Upload File\" onclick=\"uploadFile()\" class=\"md-raised md-button md-ink-ripple\">\n    <!--<progress id=\"progressBar\" value=\"0\" max=\"100\" style=\"width:300px;\"></progress>-->\n    <p id=\"status\">&nbsp;</p>\n    <!--<hr color=\"#555555\">-->\n</form>\n\n<script>\n    function _(el){\n    return document.getElementById(el);\n}\nfunction uploadFile(){\n    var file = _(\"file1\").files[0];\n    // alert(file.name+\" | \"+file.size+\" | \"+file.type);\n    var formdata = new FormData();\n    formdata.append(\"file1\", file);\n    var ajax = new XMLHttpRequest();\n    ajax.upload.addEventListener(\"progress\", progressHandler, false);\n    ajax.addEventListener(\"load\", completeHandler, false);\n    ajax.addEventListener(\"error\", errorHandler, false);\n    ajax.addEventListener(\"abort\", abortHandler, false);\n    ajax.open(\"POST\", \"/brewfatherbatchupload\");\n    ajax.send(formdata);\n}\nfunction progressHandler(event){\n    //var percent = (event.loaded / event.total) * 100;\n    //_(\"progressBar\").value = Math.round(percent);\n    //_(\"status\").innerHTML = Math.round(percent)+\"% uploaded...\";\n}\nfunction completeHandler(event){\n    _(\"status\").innerHTML = event.target.responseText;\n    //_(\"progressBar\").value = 0;\n}\nfunction errorHandler(event){\n    _(\"status\").innerHTML = \"Upload Failed\";\n}\nfunction abortHandler(event){\n    _(\"status\").innerHTML = \"Upload Aborted\";\n}\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 2220,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "b85ecacf.a49298",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "getFile",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "'/var/tmp/' & req.files[0].originalname",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.files[0].buffer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 1740,
        "wires": [
            [
                "26f65fbb.a3a83"
            ]
        ]
    },
    {
        "id": "28602a88.72c406",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'File uploaded.'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 1780,
        "wires": [
            [
                "6c693001.8e7f7"
            ]
        ]
    },
    {
        "id": "26f65fbb.a3a83",
        "type": "switch",
        "z": "9dea0b26.bbbe98",
        "name": "extensionAllowed ?",
        "property": "['json']",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "cont",
                "v": "$split(filename, '.')[-1]",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 2690,
        "y": 1740,
        "wires": [
            [
                "e8abea9e.6ada28"
            ],
            [
                "9a617b2a.53b128"
            ]
        ]
    },
    {
        "id": "9a617b2a.53b128",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Error",
        "func": "node.error(`Error: only JSON files are allowed.`, msg)\n",
        "outputs": 0,
        "noerr": 0,
        "x": 2910,
        "y": 1760,
        "wires": []
    },
    {
        "id": "e8abea9e.6ada28",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Batch JSON",
        "func": "msg.payload = JSON.parse(msg.payload);\n\nif (msg.payload._type !== \"batch\") {\n    node.error(`Error: only Brewfather batch files are supported.`, msg)\n}\nelse {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2930,
        "y": 1720,
        "wires": [
            [
                "ad8c0cc9.0c17c",
                "a60a3068.d2378"
            ]
        ]
    },
    {
        "id": "f2849f20.9450f",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 3930,
        "y": 260,
        "wires": []
    },
    {
        "id": "c65e1ece.7d4d6",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.heatpowerpct",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2440,
        "y": 1040,
        "wires": [
            [
                "36967178.bc09fe",
                "f693bae1.855238"
            ]
        ]
    },
    {
        "id": "d324d344.c9bec",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Slice message stream",
        "func": "var buffer = flow.get('ble_overflow');\nconst template = {\"timestamp\":0, \"in\":\"\", \"out\":\"\", \"overflow\":\"\"};\nvar previous = flow.get('ble_messages') || [template, template, template, template, template];\nvar logMsg = template;\nconst newMsg = msg.payload.characteristics[\"0003cdd100001000800000805f9b0131\"].toString();\nvar didSend = false;\nif(buffer) {\n    buffer = buffer + newMsg;\n}\nelse {\n    buffer = newMsg;\n}\n\nlogMsg.timestamp = msg.timestamp;\nlogMsg.in = newMsg;\n\nwhile(buffer.length >= 17) {\n    // Clean start of buffer for garbage in case something got lost earlier\n    while(\"0123456789,Z\".indexOf(buffer.substr(0,1)) !== -1) {\n       logMsg.error = true;\n       buffer = buffer.substr(1);\n    }\n\n    if(buffer.length >= 17) {\n        msg.payload = buffer.substr(0, 17);\n        const overflow = buffer.substr(17);\n        flow.set('ble_overflow', overflow);\n        buffer = overflow;\n        \n        if(overflow.length >= 17) {\n            logMsg.error = true;\n        }\n        logMsg.out = msg.payload;\n        logMsg.overflow = overflow;\n        \n        // Re-synchronize in case something goes wrong\n        const end = msg.payload.substr(-1,1);\n        if(end !== \"Z\" && end !== \",\") {\n            logMsg.error = true;\n        }\n        \n        didSend = true;\n        node.send([msg, null]);\n        if(logMsg.error) {\n            node.send([null, {'error':logMsg, 'previous':previous}]);\n            logMsg.error = false;\n        }\n    }\n    else {\n        flow.set('ble_overflow', buffer);\n        logMsg.out = null;\n    }\n}\n\nif(!didSend) {\n    flow.set('ble_overflow', buffer);\n    logMsg.out = null;\n}\n\nprevious[previous.length] = logMsg;\nprevious.shift();\nflow.set('ble_messages',previous);\n",
        "outputs": 2,
        "noerr": 0,
        "x": 1260,
        "y": 280,
        "wires": [
            [
                "cf0ea885.b26888"
            ],
            [
                "d1590ab4.6fed78"
            ]
        ],
        "outputLabels": [
            "",
            "error"
        ]
    },
    {
        "id": "ffdf3fe7.d5d46",
        "type": "ui_text",
        "z": "9dea0b26.bbbe98",
        "group": "5a19c4db.dbdd2c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Stage Alert",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 2830,
        "y": 1840,
        "wires": []
    },
    {
        "id": "5585b0fa.07b77",
        "type": "ui_template",
        "z": "9dea0b26.bbbe98",
        "group": "5a19c4db.dbdd2c",
        "name": "Brew Timer",
        "order": 2,
        "width": 6,
        "height": 2,
        "format": "<style>\n    .nr-dashboard-template h1 {\n    font-size: .875em;\n    font-weight: normal;\n    text-align: center;\n    margin-top: 0;\n    margin-bottom: 0;\n    }\n    \n    .nr-dashboard-template h2 {\n    font-size: 3.5em;\n    text-align: center;\n    margin-top: 0;\n    margin-bottom: 0;\n    }\n    \n   \n   div {\n    max-width: 100%;\n   }\n   \n   a:link {\n    color: white; \n    background-color: transparent; \n    text-decoration: none;\n}\n\na:visited {\n    color: white;\n    background-color: transparent;\n    text-decoration: none;\n}\n\n.blinking {\n  animation: blinker 1s linear infinite;\n}\n\n@keyframes blinker {\n  50% {\n    opacity: 0;\n  }\n}\n#Timer-Display-Div-Static {\n    display: {{msg.payload.static}};\n   }  \n#Timer-Display-Div-Flashing {\n    display: {{msg.payload.flashing}};\n   }  \n</style>\n\n<div id = \"Timer-Display-Div-Static\">\n<h1>{{msg.payload.timertitle}}</h1>\n<h2>{{msg.payload.timervalue}}</h2>\n</div>\n<div id = \"Timer-Display-Div-Flashing\">\n<h1>{{msg.payload.timertitle}}</h1>\n<h2 class=\"blinking\">{{msg.payload.timervalue}}</h2>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 3070,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "adfcc5a4.e6b1a8",
        "type": "switch",
        "z": "9dea0b26.bbbe98",
        "name": "Active brew session",
        "property": "payload.automode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2360,
        "y": 1540,
        "wires": [
            [
                "2fb3cabe.8af616"
            ],
            [
                "64ec676c.b5f938"
            ]
        ]
    },
    {
        "id": "2fb3cabe.8af616",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "brew_stage",
                "pt": "flow",
                "to": "payload.stagenumber",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "brew_session_active",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"GF_Connect_Timer\"],\"show\":[\"GF_Connect_Brew_Session\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2620,
        "y": 1520,
        "wires": [
            [
                "3ab32ce6.cf1a74"
            ]
        ]
    },
    {
        "id": "3ab32ce6.cf1a74",
        "type": "ui_ui_control",
        "z": "9dea0b26.bbbe98",
        "name": "Timer or Brew Session",
        "events": "all",
        "x": 2860,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "64ec676c.b5f938",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"GF_Connect_Brew_Session\"],\"show\":[\"GF_Connect_Timer\"]}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "brew_stage",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "brew_session_active",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2620,
        "y": 1560,
        "wires": [
            [
                "3ab32ce6.cf1a74"
            ]
        ]
    },
    {
        "id": "b6bb3cce.52cbc",
        "type": "ui_template",
        "z": "9dea0b26.bbbe98",
        "group": "5a19c4db.dbdd2c",
        "name": "Brew Session Name",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n#BrewSession-Div {\n    visibility: visible;\n    text-align: center;\n   }  \n</style>\n\n<div id = \"BrewSession-Div\">\n    <p>{{msg.payload.batchName}} #{{msg.payload.batchNumber}} - {{msg.payload.recipeName}}\n    </p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 3740,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "7567b57e.215ffc",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "brewSession",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3500,
        "y": 2060,
        "wires": [
            [
                "b6bb3cce.52cbc"
            ]
        ]
    },
    {
        "id": "9f3b97c9.4e4fe8",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode boil temperature (C)",
        "func": "var boilTemp = msg.parameters[0];\n\ntemperature_unit = flow.get('temperature_unit');\nif(temperature_unit === 'F') {\n    boilTemp = (boilTemp * 9 / 5) + 32;\n}\n\nvar payload = {};\npayload.temperature_unit = temperature_unit;\npayload.boilTemp = Number(boilTemp).toFixed(1);\n\nmsg.payload = payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2110,
        "y": 200,
        "wires": [
            [
                "411fe04c.d2af2"
            ]
        ]
    },
    {
        "id": "22c26e7c.acbc12",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Decode interaction code (I)",
        "func": "var interaction = msg.parameters[0];\nswitch(interaction) {\n    case \"C\":\n        msg.payload = \"interaction_cleared\";\n        break;\n        \n    default:\n        msg.payload = interaction;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 1860,
        "wires": [
            [
                "787fce9c.18755",
                "276d2c11.6ef0b4"
            ]
        ]
    },
    {
        "id": "d68334f5.3ad848",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Format brew session alert",
        "func": "const interactionCode = msg.payload.interactioncode || 0;\nconst interactionMode = msg.payload.interactionmode || false;\nconst delayedHeat = msg.payload.delayedheat || false;\nconst boilAdditionAlert = msg.payload === \"boil_addition_alert\" || false;\nconst temperatureAlarm = msg.payload === \"temperature_alarm\" || false;\nconst spargeHeatAlert = msg.payload === \"sparge_heat_alert\" || false;\nconst brewSession = flow.get(\"brewSession\");\nconst tempUnit = flow.get(\"temperature_unit\") || \"C\";\nvar payload = \"\";\nvar dismissCode = \"T\";\nvar buttonTitle = \"\";\nconst minsLeft = flow.get('timer_left_mins');\nvar sendPushAlert = false;\nvar pushAlertTitle = \"\";\nvar pushAlertMessage = \"\";\n\nfunction boilAdditionForMin(value, index, array) {\n  return value.time === minsLeft;\n}\n\nflow.set('interaction_mode', interactionMode);\n\nif(boilAdditionAlert) {\n    var boilAddition = brewSession.boilAdditions.find(boilAdditionForMin);\n\n    if(boilAddition) {\n        payload = \"Add \" + minsLeft + \" min boil additions: \" + boilAddition.name;\n    }\n    else {\n        payload = \"Add \" + minsLeft + \" min boil additions\";\n    }\n    dismissCode = \"A\";\n    buttonTitle = \"Dismiss Alert\";\n    pushAlertTitle = \"Add boil additions\";\n    pushAlertMessage = payload;\n    sendPushAlert = true;\n}\nelse if(spargeHeatAlert) {\n    pushAlertTitle = \"Heat sparge water\";\n    pushAlertMessage = \"Start heating the sparge water\";\n    sendPushAlert = true;\n    payload = \"Heat sparge water\";\n    buttonTitle = \"Dismiss Alert\";\n    dismissCode = \"T\";\n}\nelse {\n    dismissCode = \"T\";\n    if(temperatureAlarm) {\n        buttonTitle = \"Dismiss Temperature Alarm\";\n        pushAlertTitle = \"Boil temperature reached\";\n        pushAlertMessage = \"Ready to start boil timer\";\n        sendPushAlert = true;\n    }\n    else {\n        switch(interactionCode) {\n            case \"1\":\n                if(tempUnit === \"C\") {\n                    payload = \"Add \" + brewSession.mashWaterAmount + \" L water\";\n                }\n                else {\n                    payload = \"Add \" + (brewSession.mashWaterAmount / 3.7853).toFixed(2) + \" gal water\";\n                }\n                if(delayedHeat) {\n                    buttonTitle = \"Override Delay\";\n                }\n                else {\n                    buttonTitle = \"Start Heating\";\n                }\n                break;\n            case \"2\":\n                payload = \"Add grain\";\n                buttonTitle = \"Start Mash\";\n                pushAlertTitle = \"Mash water ready\";\n                pushAlertMessage = \"Mash water is ready for adding grain\";\n                sendPushAlert = true;\n                break;\n            case \"3\":\n                payload = \"Mash finished\";\n                buttonTitle = \"Start Sparge\";\n                pushAlertTitle = \"Mash finished\";\n                pushAlertMessage = \"Ready to start sparge\";\n                sendPushAlert = true;\n                break;\n            case \"4\":\n                if(tempUnit === \"C\") {\n                    payload = \"Sparge volume \" + brewSession.spargeWaterAmount + \" L\";\n                }\n                else {\n                    payload = \"Sparge volume  \" + (brewSession.spargeWaterAmount / 3.7853).toFixed(2) + \" gal\";\n                }\n                buttonTitle = \"Skip to Boil\";\n                break;\n            case \"5\":\n                payload = \"Boil reached\";\n                buttonTitle = \"Start Boil Timer\";\n                break;\n            case \"6\":\n                if(brewSession.hopStandTime) {\n                    payload = \"Add hops\"\n                    buttonTitle = \"Start Hop Stand Timer\";\n                }\n                else {\n                    payload = \"Boil finished\";\n                    buttonTitle = \"Finish Brew Session\";\n                    pushAlertTitle = \"Boil finished\";\n                    pushAlertMessage = \"The boil timer has elapsed.\";\n                    sendPushAlert = true;\n                }\n                break;\n            case \"7\":\n                payload = \"Hop stand finished\";\n                buttonTitle = \"Finish Brew Session\";\n                pushAlertTitle = \"Hop stand finished\";\n                pushAlertMessage = \"The hop stand timer has elapsed.\";\n                sendPushAlert = true;\n                break;\n            default:\n                if(flow.get('timer_elapsed')) {\n                    buttonTitle = \"Boil Timer Elapsed\";\n                    pushAlertTitle = \"Boil finished\";\n                    pushAlertMessage = \"The boil timer has elapsed.\";\n                    sendPushAlert = true;\n                }\n                else {\n                    dismissCode = \"\";\n                }\n        }\n    }\n}\n\nflow.set('alert_dismiss_code', dismissCode);\n\nif(buttonTitle) {\n    msg.colour = \"#4B7930\";\n    msg.textcolour = \"#FFFFFF\"\n}\nelse {\n    msg.colour = \"#333333\";\n    msg.textcolour =\"#333333\"\n}\n\nmsg.button_title = buttonTitle;\nmsg.payload = payload;\nmsg.pushalert = sendPushAlert;\nmsg.pushtitle = pushAlertTitle;\nmsg.pushmessage = pushAlertMessage;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2490,
        "y": 1920,
        "wires": [
            [
                "ffdf3fe7.d5d46",
                "6d170045.566eb",
                "40d566f1.9a0798"
            ]
        ]
    },
    {
        "id": "2113cd0f.134c52",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Set stage title",
        "func": "const brewSession = flow.get(\"brewSession\");\nconst stageNumber = flow.get('brew_stage');\n\nvar displayStatic = \"inline\";\nvar displayFlashing = \"none\";\n\nif(msg.payload.timerelapsed){\n    displayStatic = \"none\";\n    displayFlashing = \"inline\";\n}\n\nmsg.payload.timertitle = brewSession.stageTitles[stageNumber];\nmsg.payload.static = displayStatic;\nmsg.payload.flashing = displayFlashing;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2740,
        "y": 1120,
        "wires": [
            [
                "5585b0fa.07b77"
            ]
        ]
    },
    {
        "id": "dc4d7b2d.61a548",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Format timer",
        "func": "var timerTitle = \" \";\nvar displayStatic = \"inline\";\nvar displayFlashing = \"none\";\n\nif(msg.payload.timerelapsed){\n    displayStatic = \"none\";\n    displayFlashing = \"inline\";\n}\n\nvar delayedHeat = flow.get(\"delayed_heat\");\n\nif(msg.payload.timeractive) {\n    timerTitle = delayedHeat ? \"Delayed heat\" : \"Timer active\";\n}\nif(msg.payload.timerpaused) {\n    timerTitle = delayedHeat ? \"Delayed heat paused\" : \"Timer paused\";\n}\nif(msg.payload.timerelapsed) {\n    timerTitle = delayedHeat ? \"Delayed heat started\" : \"Timer elapsed\";\n}\n\nmsg.payload.static = displayStatic;\nmsg.payload.flashing = displayFlashing;\nmsg.payload.timertitle = timerTitle;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2610,
        "y": 820,
        "wires": [
            [
                "85deae7f.7cd6b",
                "8b92ed08.f1527",
                "e43ed08c.e0f55",
                "5ed27c8f.9e9694"
            ]
        ]
    },
    {
        "id": "6d170045.566eb",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "Dismiss Alert",
        "group": "5a19c4db.dbdd2c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "{{msg.button_title}}",
        "tooltip": "",
        "color": "{{textcolour}}",
        "bgcolor": "{{colour}}",
        "icon": "",
        "payload": "alert_dismiss_code",
        "payloadType": "flow",
        "topic": "",
        "x": 2830,
        "y": 1880,
        "wires": [
            [
                "27bb0cb7.24f754"
            ]
        ]
    },
    {
        "id": "27bb0cb7.24f754",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Validate dismiss",
        "func": "const interactionMode = flow.get('interaction_mode') || false;\nconst stickyBoilAdditionAlert = flow.get('sticky_boil_addition_alert') || false;\nconst stickyTemperatureAlarm = flow.get('sticky_temperature_alarm') || false;\nconst timerElapsedAlarm = flow.get('timer_elapsed') || false;\nconst delayedHeat = flow.get('delayed_heat') || false;\nconst spargeHeatAlert = flow.get('sparge_heat_alert') || false;\n\nif(stickyBoilAdditionAlert && msg.payload == \"A\") {\n    flow.set('sticky_boil_addition_alert', false);\n    return msg;\n}\n\nif(stickyTemperatureAlarm && msg.payload == \"T\") {\n    flow.set('sticky_temperature_alarm', false);\n    return msg;\n}\n\nif(interactionMode && msg.payload === \"T\") {\n    return msg;\n}\n\nif(timerElapsedAlarm && msg.payload === \"T\") {\n    return msg;\n}\n\nif(delayedHeat && msg.payload === \"T\") {\n    return msg;\n}\n\nif(spargeHeatAlert && msg.payload === \"T\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3020,
        "y": 1880,
        "wires": [
            [
                "bce0ab71.378748"
            ]
        ]
    },
    {
        "id": "3b351db2.6a8832",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "Decode Boil Addition Alert (A)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "boil_addition_alert",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 1920,
        "wires": [
            [
                "787fce9c.18755"
            ]
        ]
    },
    {
        "id": "787fce9c.18755",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Sticky alert",
        "func": "if(msg.payload === \"boil_addition_alert\") {\n    flow.set('sticky_boil_addition_alert', true);\n    return msg;\n}\nif(msg.payload === \"sparge_heat_alert\") {\n    flow.set('sticky_sparge_heat_alert', true);\n    return msg;\n}\nif(msg.payload === \"interaction_cleared\") {\n    flow.set('sticky_boil_addition_alert', false);\n    flow.set('sticky_sparge_heat_alert', false);\n}\nelse if(flow.get('sticky_sparge_heat_alert') === false && flow.get('sticky_sparge_heat_alert') === false) {\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2010,
        "y": 1920,
        "wires": [
            [
                "276d2c11.6ef0b4"
            ]
        ]
    },
    {
        "id": "d1590ab4.6fed78",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1470,
        "y": 320,
        "wires": []
    },
    {
        "id": "3c5278cd.ca2a78",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ble_messages",
                "pt": "msg",
                "to": "ble_messages",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 100,
        "wires": [
            [
                "3eedaa2c.774446"
            ]
        ]
    },
    {
        "id": "3eedaa2c.774446",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2170,
        "y": 100,
        "wires": []
    },
    {
        "id": "83b06089.5c7af",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ble_messages",
                "pt": "msg",
                "to": "ble_messages",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 680,
        "wires": [
            [
                "411c53b4.5f7cbc"
            ]
        ]
    },
    {
        "id": "7e0e682f.5b34a8",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "Decode Alarm (E)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "alarm",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 1820,
        "wires": [
            [
                "276d2c11.6ef0b4"
            ]
        ]
    },
    {
        "id": "276d2c11.6ef0b4",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Sticky temperature alarm",
        "func": "if(msg.payload === \"alarm\") {\n    const interactionMode = flow.get('interaction_mode');\n    const stageRamp = flow.get('stage_ramp');\n    const brewSession = flow.get('brewSession');\n    const stage = flow.get('brew_stage');\n    if(!interactionMode && stageRamp && (stage === brewSession.boilStage)) {\n        flow.set('sticky_temperature_alarm', true);\n        \n        msg.payload = \"temperature_alarm\";\n        return msg;\n    }\n}\nelse if(msg.payload === \"interaction_cleared\") {\n    flow.set('sticky_temperature_alarm', false);\n}\nelse if(flow.get('sticky_temperature_alarm') === false) {\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2230,
        "y": 1920,
        "wires": [
            [
                "d68334f5.3ad848"
            ]
        ]
    },
    {
        "id": "dcb368c9.45a218",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stage_ramp",
                "pt": "flow",
                "to": "payload.stageramp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "delayed_heat",
                "pt": "flow",
                "to": "payload.delayedheat",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2260,
        "y": 1240,
        "wires": [
            [
                "f02efb47.4ccc68"
            ]
        ]
    },
    {
        "id": "6ec8c28c.5490bc",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Slice message stream (backup)",
        "func": "var buffer = context.get('overflow');\nconst template = {\"timestamp\":0, \"in\":\"\", \"out\":\"\", \"overflow\":\"\"};\nvar previous = flow.get('ble_messages') || [template, template, template, template, template];\nvar logMsg = template;\nconst newMsg = msg.payload.characteristics[\"0003cdd100001000800000805f9b0131\"];\nif(buffer) {\n    buffer = Buffer.concat([buffer, newMsg]);\n}\nelse {\n    buffer = newMsg;\n}\n\nlogMsg.timestamp = msg.timestamp;\nlogMsg.in = newMsg;\n\nif(buffer.length >= 17) {\n    msg.payload = buffer.slice(0, 16).toString();\n    const overflow = buffer.slice(17);\n    context.set('overflow', overflow);\n    \n    logMsg.out = msg.payload;\n    logMsg.overflow = overflow;\n    \n    // Re-synchronize in case something goes wrong\n    const end = msg.payload.substr(16,1);\n    const start = msg.payload.substr(0,1);\n    if((\"0123456789,Z\".indexof(start) !== -1) || (end !== \"Z\" && end !== \",\") ) {\n        logMsg.error = true;\n        node.send([null, {'error':logMsg, 'previous':previous}]);\n        context.set('overflow', null);\n    }\n}\nelse {\n    msg.payload = buffer.toString();\n    logMsg.out = msg.payload;\n    context.set('overflow', null);\n}\n\n//node.send([null, {'error':logMsg, 'previous':previous}]);\nprevious[previous.length] = logMsg;\nprevious.shift();\nflow.set('ble_messages',previous);\n\nnode.send([msg, null]);\n",
        "outputs": 2,
        "noerr": 0,
        "x": 1290,
        "y": 120,
        "wires": [
            [],
            []
        ],
        "outputLabels": [
            "",
            "error"
        ]
    },
    {
        "id": "1ed8aea6.839e01",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Pause/resume timer",
        "topic": "",
        "payload": "G",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3790,
        "y": 540,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "74e0e099.77a4e",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "push in",
        "links": [
            "96d4eaea.3a2de8",
            "9e057e41.c8ba8"
        ],
        "x": 395,
        "y": 840,
        "wires": [
            [
                "409c0204.fd2d8c"
            ]
        ]
    },
    {
        "id": "9e057e41.c8ba8",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "push out",
        "links": [
            "74e0e099.77a4e"
        ],
        "x": 3175,
        "y": 760,
        "wires": []
    },
    {
        "id": "409c0204.fd2d8c",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Format push message",
        "func": "\nconst pushEnabled = (flow.get('pushover_enabled'))||false;\nif(pushEnabled) {\n    const key = flow.get('pushover_key');\n    const token = flow.get('pushover_token');\n    if(key && token && key.length && token.length) {\n        var title;\n        msg.headers = {};\n        msg.headers['Content-type'] = 'application/json';\n        msg.url = \"https://api.pushover.net/1/messages.json\";\n        if(msg.topic && msg.topic.length) {\n            title = msg.topic;\n        }\n        else {\n            title = \"GF Connect\";\n        }\n        const payload =  {\n            \"token\": token,\n            \"user\": key,\n            \"title\": title,\n            \"message\": msg.payload };\n        msg.payload = JSON.stringify(payload);\n\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 840,
        "wires": [
            [
                "8aaa732b.a7ea2"
            ]
        ]
    },
    {
        "id": "40d566f1.9a0798",
        "type": "rbe",
        "z": "9dea0b26.bbbe98",
        "name": "push alert",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "pushalert",
        "x": 2820,
        "y": 1920,
        "wires": [
            [
                "b373a6f3.956418"
            ]
        ]
    },
    {
        "id": "b373a6f3.956418",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Format brew alert",
        "func": "if(msg.pushalert) {\n    msg.topic = msg.pushtitle;\n    msg.payload = msg.pushmessage;\n    \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3010,
        "y": 1920,
        "wires": [
            [
                "b46080d6.551",
                "96d4eaea.3a2de8"
            ]
        ]
    },
    {
        "id": "b46080d6.551",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 3230,
        "y": 1880,
        "wires": []
    },
    {
        "id": "96d4eaea.3a2de8",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "push out",
        "links": [
            "74e0e099.77a4e"
        ],
        "x": 3195,
        "y": 1920,
        "wires": []
    },
    {
        "id": "706d9f4d.22536",
        "type": "ui_switch",
        "z": "9dea0b26.bbbe98",
        "name": "Brewfather enabled",
        "label": "Enable Brewfather connection",
        "tooltip": "",
        "group": "a56d0f41.236f6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 530,
        "y": 1140,
        "wires": [
            [
                "e89a906.d7d817",
                "28156b92.d1f184"
            ]
        ]
    },
    {
        "id": "4676395.9dac2c8",
        "type": "ui_text_input",
        "z": "9dea0b26.bbbe98",
        "name": "Brewfather User ID",
        "label": "User ID [Use RETURN to save]",
        "tooltip": "",
        "group": "a56d0f41.236f6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": "0",
        "topic": "",
        "x": 530,
        "y": 1200,
        "wires": [
            [
                "3123c1fb.59830e"
            ]
        ]
    },
    {
        "id": "8a21da68.c2f608",
        "type": "ui_text_input",
        "z": "9dea0b26.bbbe98",
        "name": "Brewfather API Key",
        "label": "API Key [Use RETURN to save]",
        "tooltip": "",
        "group": "a56d0f41.236f6",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": "0",
        "topic": "",
        "x": 530,
        "y": 1260,
        "wires": [
            [
                "b45b6518.2dc8f8"
            ]
        ]
    },
    {
        "id": "a4b5088.db903f8",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "brewfather_enabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1140,
        "wires": [
            [
                "706d9f4d.22536"
            ]
        ]
    },
    {
        "id": "6f8b75ab.018b7c",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "brewfather_user_id",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1200,
        "wires": [
            [
                "4676395.9dac2c8"
            ]
        ]
    },
    {
        "id": "4189aa49.51f184",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "brewfather_api_key",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1260,
        "wires": [
            [
                "8a21da68.c2f608"
            ]
        ]
    },
    {
        "id": "e89a906.d7d817",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "brewfather_enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1140,
        "wires": [
            [
                "e6a2e1dc.32dfa"
            ]
        ]
    },
    {
        "id": "3123c1fb.59830e",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "brewfather_user_id",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1200,
        "wires": [
            [
                "e6a2e1dc.32dfa"
            ]
        ]
    },
    {
        "id": "b45b6518.2dc8f8",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "brewfather_api_key",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1260,
        "wires": [
            [
                "e6a2e1dc.32dfa"
            ]
        ]
    },
    {
        "id": "e6a2e1dc.32dfa",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Format Brewfather command",
        "func": "const brewfatherEnabled = (flow.get('brewfather_enabled'))||false;\nif(brewfatherEnabled) {\n    const userID = flow.get('brewfather_user_id');\n    const apiKey = flow.get('brewfather_api_key');\n    if(userID && apiKey && userID.length && apiKey.length) {\n        authKey = Buffer.from(userID + \":\" + apiKey).toString(\"base64\");\n        const batchStatus = msg.payload.batchstatus || \"Planning\";\n        const batchLimit = msg.payload.batchlimit || 1;\n        const batchID = msg.payload.batchID;\n        const batchCmd = msg.payload.command || \"get\"; // \"Either 'set' og 'get' (default)\"\n        \n        msg.cookies = msg.payload.cookies;\n        msg.payload = {};\n        msg.headers = {};\n        msg.headers['Authorization'] = \"Basic \" + authKey;\n        msg.method = \"GET\";\n        if(batchID) {\n            msg.url = \"https://api.brewfather.app/v1/batches/\" + batchID;\n            if(batchCmd === \"set\") {\n                msg.url = msg.url + \"?status=\" + batchStatus;\n                msg.method = \"PATCH\";\n            }\n        }\n        else {\n            msg.url = \"https://api.brewfather.app/v1/batches?status=\" + batchStatus + \"&limit=\" + batchLimit;\n        }\n\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1350,
        "y": 1280,
        "wires": [
            [
                "a7faefe.ccda81",
                "28c3cec9.240022"
            ]
        ]
    },
    {
        "id": "a7faefe.ccda81",
        "type": "http request",
        "z": "9dea0b26.bbbe98",
        "name": "Brewfather batch request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 870,
        "y": 1480,
        "wires": [
            [
                "c91850e2.3deaa",
                "53471228.8f556c",
                "702be1b3.704b2"
            ]
        ]
    },
    {
        "id": "c91850e2.3deaa",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 1520,
        "wires": []
    },
    {
        "id": "28c3cec9.240022",
        "type": "debug",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1590,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d0e026e0.86fc58",
        "type": "ui_template",
        "z": "9dea0b26.bbbe98",
        "group": "a56d0f41.236f6",
        "name": "Brewfather connection status",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1190,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "53471228.8f556c",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Brewfather status",
        "func": "if(msg.statusCode === 200) {\n    msg.payload = \"Connected\";\n} \nelse if(msg.statusCode) {\n    msg.payload = \"Error \" + msg.statusCode + \": \" + msg.payload;\n}\nelse {\n    msg.payload = \"\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 1660,
        "wires": [
            [
                "d0e026e0.86fc58"
            ]
        ]
    },
    {
        "id": "28156b92.d1f184",
        "type": "switch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 1660,
        "wires": [
            [
                "9b1f9f36.e76f8"
            ]
        ]
    },
    {
        "id": "9b1f9f36.e76f8",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": " ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1660,
        "wires": [
            [
                "53471228.8f556c"
            ]
        ]
    },
    {
        "id": "e328018c.e2a5f",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "d1a86442.7b18f8"
        ],
        "x": 95,
        "y": 1220,
        "wires": [
            [
                "4189aa49.51f184",
                "6f8b75ab.018b7c",
                "a4b5088.db903f8",
                "9b1f9f36.e76f8",
                "f3135e7.2cfb9a"
            ]
        ]
    },
    {
        "id": "a60a3068.d2378",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected_batch",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "batch_load_method",
                "pt": "flow",
                "to": "file",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3160,
        "y": 1720,
        "wires": [
            [
                "f3ea1063.7eb96",
                "86fe23b3.27839"
            ]
        ]
    },
    {
        "id": "87a9f7aa.085638",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "d1a86442.7b18f8"
        ],
        "x": 3635,
        "y": 1760,
        "wires": [
            [
                "9e9dc494.f7e598"
            ]
        ]
    },
    {
        "id": "f3ea1063.7eb96",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.batch_id_status",
                "pt": "msg",
                "to": " $flowContext('selected_batch').name & ' #' &  $flowContext('selected_batch').batchNo &\t ' (' &  $flowContext('selected_batch').status\t& ')'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.recipe_name",
                "pt": "msg",
                "to": "selected_batch.recipe.name",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.recipe_style",
                "pt": "msg",
                "to": " $flowContext('selected_batch').recipe.style.name & ' (' &  $flowContext('selected_batch').recipe.type & ')'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3780,
        "y": 1720,
        "wires": [
            [
                "43139386.cd6c0c"
            ]
        ]
    },
    {
        "id": "43139386.cd6c0c",
        "type": "ui_template",
        "z": "9dea0b26.bbbe98",
        "group": "f64cef87.3ae2e",
        "name": "Selected Batch Info",
        "order": 1,
        "width": 6,
        "height": 2,
        "format": "<style>\n\n#BatchInformation-Div {\n    visibility: visible;\n    text-align: left;\n   }  \n   \n#Batch_id_status {\n    font-size: 1.2em;\n    font-weight: bold;\n   }  \n\n   \n#Batch_recipe_name {\n    font-size: 1em;\n    font-weight: bold;\n   }  \n\n#Batch_recipe_style {\n    font-size: 0.8em;\n    font-weight: normal;\n   }  \n\n</style>\n\n<div id = \"BatchInformation-Div\">\n    <p id = \"Batch_id_status\">{{msg.payload.batch_id_status}}</p>\n    <p id = \"Batch_recipe_name\">{{msg.payload.recipe_name}}</p>\n    <p id = \"Batch_recipe_style\">{{msg.payload.recipe_style}}</p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 4010,
        "y": 1760,
        "wires": [
            [
                "5b7c9271.25ca2c"
            ]
        ]
    },
    {
        "id": "9e9dc494.f7e598",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.batch_id_status",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.recipe_name",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.recipe_style",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3780,
        "y": 1780,
        "wires": [
            [
                "43139386.cd6c0c"
            ]
        ]
    },
    {
        "id": "f2d17010.6d11d",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "group": "f64cef87.3ae2e",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Start Session",
        "tooltip": "",
        "color": "{{textcolour}}",
        "bgcolor": "{{colour}}",
        "icon": "",
        "payload": "start session",
        "payloadType": "str",
        "topic": "",
        "x": 2810,
        "y": 2080,
        "wires": [
            [
                "c2cf6b49.b5d4d8"
            ]
        ]
    },
    {
        "id": "6a51924.7dbca6c",
        "type": "ui_dropdown",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select Brewfather batch",
        "group": "6500c5a.452263c",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "options": [],
        "payload": "",
        "topic": "",
        "x": 1290,
        "y": 1540,
        "wires": [
            [
                "dbfbfc50.bf6c"
            ]
        ]
    },
    {
        "id": "58cc8c11.e1c434",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "Refresh",
        "group": "6500c5a.452263c",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "label": "Refresh List",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{}",
        "payloadType": "json",
        "topic": "",
        "x": 500,
        "y": 1340,
        "wires": [
            [
                "b9e599ac.bde388"
            ]
        ]
    },
    {
        "id": "961041e0.0dd63",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Fill batch dropdown",
        "func": "var batchDropdown;\nconst cookies = msg.cookies || {};\n\nfunction getBatchInfo(value, index, array) {\n  var batch = {};\n  batch.value = value._id;\n  batch.number = value.batchNo;\n  batch.label = \"#\" + value.batchNo + \": \" + value.recipe.name + \" (\" + value.status + \")\";\n  //batch.label = value.name + \" #\" + value.batchNo + \" (\" + value.status + \")\";\n  batchDropdown[batchDropdown.length] = batch;\n}\n\nfunction sortBatch(a, b) {\n    return a.number - b.number;\n}\n\nvar dropdownList;\n\nfunction makeDropdownList(item, index, array) {\n    dropdownItem = {};\n    dropdownItem[item.label] = item.value; \n    dropdownList.push(dropdownItem);   \n}\n\nbatchDropdown = flow.get(\"batch_dropdown\") || [];\npayload = JSON.parse(msg.payload);\n\npayload.forEach(getBatchInfo);\nbatchDropdown.sort(sortBatch);\ndropdownList = [];\nbatchDropdown.forEach(makeDropdownList);\nflow.set(\"batch_dropdown\", batchDropdown);\n\nif(cookies.batchstatus === 'planning') {\n    flow.set('brewfather_pending_batch_request', false);\n}\nelse if(cookies.batchstatus === 'brewing') {\n    flow.set('brewfather_brewing_batch_request', false);\n}\n\nif(!flow.get('brewfather_pending_batch_request') && !flow.get('brewfather_brewing_batch_request')) {\n    msg = { \"options\":dropdownList };\n    node.send(msg);\n}\nmsg = {};\n\nlet selectedBatch = flow.get('selected_batch');\nif(selectedBatch) {\n    msg.payload = selectedBatch._id;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1400,
        "y": 1460,
        "wires": [
            [
                "6a51924.7dbca6c",
                "1de955a2.fa64ca",
                "648476d8.0ce148"
            ]
        ]
    },
    {
        "id": "b9e599ac.bde388",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "batch_dropdown",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "brewfather_pending_batch_request",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "brewfather_brewing_batch_request",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1340,
        "wires": [
            [
                "6a51924.7dbca6c",
                "50c25e86.abfa3",
                "648476d8.0ce148"
            ]
        ]
    },
    {
        "id": "20877e31.2c8f82",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Get batch info",
        "func": "\npayload = JSON.parse(msg.payload);\nmsg = {};\nflow.set('selected_batch', payload);\nflow.set('batch_load_method', 'api');\nmsg.payload = payload;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1560,
        "y": 1400,
        "wires": [
            [
                "49c7f927.213f08"
            ]
        ]
    },
    {
        "id": "702be1b3.704b2",
        "type": "switch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "property": "cookies.request",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "set_batch_status",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "select_batch",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "refresh_list",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1170,
        "y": 1440,
        "wires": [
            [
                "58cc8c11.e1c434"
            ],
            [
                "20877e31.2c8f82"
            ],
            [
                "961041e0.0dd63"
            ]
        ]
    },
    {
        "id": "dbfbfc50.bf6c",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Get batch ID",
        "func": "var payload = {};\n\nif(msg.payload && msg.payload.length) {\n    payload.batchID = msg.payload;\n    payload.cookies = {\"request\":\"select_batch\"}\n    msg.payload = payload;\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1590,
        "y": 1540,
        "wires": [
            [
                "e6a2e1dc.32dfa",
                "35ca3744.455308"
            ]
        ]
    },
    {
        "id": "f3135e7.2cfb9a",
        "type": "delay",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 320,
        "y": 1340,
        "wires": [
            [
                "58cc8c11.e1c434"
            ]
        ]
    },
    {
        "id": "8adfb00d.dbe53",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.batch_id_status",
                "pt": "msg",
                "to": "Fetching data...",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.recipe_name",
                "pt": "msg",
                "to": " ",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.recipe_style",
                "pt": "msg",
                "to": " ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3780,
        "y": 1840,
        "wires": [
            [
                "43139386.cd6c0c"
            ]
        ]
    },
    {
        "id": "fff72b47.ea0f18",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Update batch status",
        "func": "if(flow.get('batch_load_method') === \"api\") {\n    var payload = {};\n    \n    payload.batchID = msg.payload._id;\n    payload.cookies = {\"request\":\"set_batch_status\"}\n    payload.command = \"set\";\n    payload.batchstatus = \"Brewing\";\n    msg.payload = payload;\n    \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3280,
        "y": 2140,
        "wires": [
            [
                "75017d5f.2d8f04",
                "bea473d7.d454c"
            ]
        ]
    },
    {
        "id": "75017d5f.2d8f04",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "a38061b1.72337"
        ],
        "x": 3435,
        "y": 2120,
        "wires": []
    },
    {
        "id": "a38061b1.72337",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "75017d5f.2d8f04"
        ],
        "x": 1155,
        "y": 1240,
        "wires": [
            [
                "e6a2e1dc.32dfa"
            ]
        ]
    },
    {
        "id": "50c25e86.abfa3",
        "type": "trigger",
        "z": "9dea0b26.bbbe98",
        "op1": "{\"batchstatus\":\"Brewing\",\"batchlimit\":25,\"cookies\":{\"request\":\"refresh_list\",\"batchstatus\":\"brewing\"}}",
        "op2": "{\"batchstatus\":\"Planning\",\"batchlimit\":25,\"cookies\":{\"request\":\"refresh_list\",\"batchstatus\":\"planning\"}}",
        "op1type": "json",
        "op2type": "json",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 940,
        "y": 1340,
        "wires": [
            [
                "e6a2e1dc.32dfa"
            ]
        ]
    },
    {
        "id": "1de955a2.fa64ca",
        "type": "switch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1610,
        "y": 1460,
        "wires": [
            [
                "3a3bac0d.0c52e4"
            ]
        ]
    },
    {
        "id": "8edd7d50.ada8c",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "49c7f927.213f08"
        ],
        "x": 3635,
        "y": 1700,
        "wires": [
            [
                "f3ea1063.7eb96"
            ]
        ]
    },
    {
        "id": "49c7f927.213f08",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "8edd7d50.ada8c"
        ],
        "x": 1935,
        "y": 1400,
        "wires": []
    },
    {
        "id": "58b8beb.cf54c4",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "35ca3744.455308"
        ],
        "x": 3635,
        "y": 1820,
        "wires": [
            [
                "8adfb00d.dbe53"
            ]
        ]
    },
    {
        "id": "35ca3744.455308",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "58b8beb.cf54c4"
        ],
        "x": 1735,
        "y": 1540,
        "wires": []
    },
    {
        "id": "3a3bac0d.0c52e4",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 1460,
        "wires": [
            [
                "49c7f927.213f08"
            ]
        ]
    },
    {
        "id": "86fe23b3.27839",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Loaded from file",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1580,
        "wires": [
            [
                "6a51924.7dbca6c"
            ]
        ]
    },
    {
        "id": "bea473d7.d454c",
        "type": "delay",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 3510,
        "y": 2180,
        "wires": [
            [
                "5a06d81.1c5d028"
            ]
        ]
    },
    {
        "id": "5a06d81.1c5d028",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.batchID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3720,
        "y": 2180,
        "wires": [
            [
                "be54db91.507ff8"
            ]
        ]
    },
    {
        "id": "be54db91.507ff8",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "c6b58732.5d6fa8"
        ],
        "x": 3835,
        "y": 2180,
        "wires": []
    },
    {
        "id": "c6b58732.5d6fa8",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "be54db91.507ff8"
        ],
        "x": 1475,
        "y": 1580,
        "wires": [
            [
                "dbfbfc50.bf6c"
            ]
        ]
    },
    {
        "id": "22f23340.8e75fc",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "controller_formware",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "411fe04c.d2af2",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "local_boil_temperature",
                "pt": "flow",
                "to": "payload.boilTemp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1cbebfac.37bf8",
        "type": "ui_numeric",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "label": "Hours",
        "tooltip": "",
        "group": "8225a265.09c9b",
        "order": 4,
        "width": 3,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "48",
        "step": 1,
        "x": 2870,
        "y": 400,
        "wires": [
            [
                "8fd350fe.14c6c"
            ]
        ]
    },
    {
        "id": "956201f.f96f5",
        "type": "ui_numeric",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "label": "Minutes",
        "tooltip": "",
        "group": "8225a265.09c9b",
        "order": 5,
        "width": 3,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "59",
        "step": 1,
        "x": 2860,
        "y": 460,
        "wires": [
            [
                "a22dee44.cf751"
            ]
        ]
    },
    {
        "id": "f1e1ca3a.9bab38",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "group": "8225a265.09c9b",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start Timer",
        "tooltip": "",
        "color": "{{textcolour}}",
        "bgcolor": "{{colour}}",
        "icon": "",
        "payload": "start timer",
        "payloadType": "str",
        "topic": "",
        "x": 3110,
        "y": 560,
        "wires": [
            [
                "be406293.7f228"
            ]
        ]
    },
    {
        "id": "be406293.7f228",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Calculate timer",
        "func": "if(flow.get('connection') === \"connected\" && !flow.get('timer_active') && !flow.get('timer_paused') && !flow.get('timer_elapsed')) {\n    var minutes = flow.get('new_timer_minutes');\n    var hours = flow.get('new_timer_hours');\n    var timerVal = hours * 60 + minutes;\n    \n    if(timerVal) {\n        if(msg.payload === \"start timer\") {\n            msg.payload = \"W\" + timerVal + \",60,\";\n            return msg;\n        }\n        else if(msg.payload === \"delayed heat\") {\n            flow.set(\"delayed_heat\", true); // Prevent title showing \"timer started\" first second\n            msg.payload = \"B\" + timerVal + \",60,\";\n            return msg;\n        }\n   }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3320,
        "y": 580,
        "wires": [
            [
                "bce0ab71.378748"
            ]
        ]
    },
    {
        "id": "8fd350fe.14c6c",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "new_timer_hours",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3070,
        "y": 400,
        "wires": [
            [
                "f02efb47.4ccc68"
            ]
        ]
    },
    {
        "id": "a22dee44.cf751",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "new_timer_minutes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3080,
        "y": 460,
        "wires": [
            [
                "f02efb47.4ccc68"
            ]
        ]
    },
    {
        "id": "972a9ebc.ebca7",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "1f58d751.316199"
        ],
        "x": 4215,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1f58d751.316199",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "972a9ebc.ebca7"
        ],
        "x": 3235,
        "y": 1200,
        "wires": [
            [
                "6cb11f95.fde87"
            ]
        ]
    },
    {
        "id": "fb404aad.c48cd8",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 420,
        "wires": [
            [
                "1cbebfac.37bf8",
                "956201f.f96f5"
            ]
        ]
    },
    {
        "id": "6c5f2523.9f24ac",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "d1a86442.7b18f8"
        ],
        "x": 2555,
        "y": 420,
        "wires": [
            [
                "fb404aad.c48cd8",
                "f02efb47.4ccc68"
            ]
        ]
    },
    {
        "id": "8906fc40.505e6",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "group": "8225a265.09c9b",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Delayed Heat",
        "tooltip": "",
        "color": "{{textcolour}}",
        "bgcolor": "{{colour}}",
        "icon": "",
        "payload": "delayed heat",
        "payloadType": "str",
        "topic": "",
        "x": 3100,
        "y": 620,
        "wires": [
            [
                "be406293.7f228"
            ]
        ]
    },
    {
        "id": "f02efb47.4ccc68",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Adjust start timer buttons",
        "func": "var minutes = flow.get('new_timer_minutes');\nvar hours = flow.get('new_timer_hours');\nvar timerVal = hours * 60 + minutes;\nconst connected = flow.get('connection') === \"connected\";\nconst timerInactive = !flow.get('timer_active') && !flow.get('timer_paused') && !flow.get('timer_elapsed');\n\nmsg = {};\n\nif(connected && timerInactive && timerVal > 0) {\n    msg.colour = \"#4B7930\";\n    msg.textcolour = \"#FFFFFF\"\n}\nelse {\n    msg.colour = \"#444444\";\n    msg.textcolour =\"#333333\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2840,
        "y": 600,
        "wires": [
            [
                "f1e1ca3a.9bab38",
                "8906fc40.505e6"
            ]
        ]
    },
    {
        "id": "144faf71.e45f11",
        "type": "ui_button",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "group": "f64cef87.3ae2e",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Start Delayed Session",
        "tooltip": "",
        "color": "{{textcolour}}",
        "bgcolor": "{{colour}}",
        "icon": "",
        "payload": "delayed session",
        "payloadType": "str",
        "topic": "",
        "x": 2800,
        "y": 2040,
        "wires": [
            [
                "c2cf6b49.b5d4d8"
            ]
        ]
    },
    {
        "id": "b1ccae28.53456",
        "type": "ui_numeric",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "label": "Hours",
        "tooltip": "",
        "group": "f64cef87.3ae2e",
        "order": 3,
        "width": 3,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "48",
        "step": 1,
        "x": 1910,
        "y": 2040,
        "wires": [
            [
                "c1317a98.2f2e68"
            ]
        ]
    },
    {
        "id": "56bbb891.cbf6b8",
        "type": "ui_numeric",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "label": "Minutes",
        "tooltip": "",
        "group": "f64cef87.3ae2e",
        "order": 4,
        "width": 3,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "59",
        "step": 1,
        "x": 1920,
        "y": 2080,
        "wires": [
            [
                "c845f093.194a5"
            ]
        ]
    },
    {
        "id": "648476d8.0ce148",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Set spinner",
        "func": "\nvar ui_control = {'icon':''};\nif(flow.get('brewfather_pending_batch_request') || flow.get('brewfather_brewing_batch_request')) {\n    ui_control.icon = \"fa-refresh fa-spin\";\n}\nnode.send({'ui_control':ui_control});\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 1420,
        "wires": [
            [
                "58cc8c11.e1c434"
            ]
        ]
    },
    {
        "id": "e8e01e5a.df5c7",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Adjust start session buttons",
        "func": "var minutes = flow.get('delayed_session_minutes');\nvar hours = flow.get('delayed_session_hours');\nvar timerVal = hours * 60 + minutes;\nconst connected = flow.get('connection') === \"connected\";\nconst sessionActive = flow.get('brew_session_active');\n\nmsgDelayed = {};\nmsgDelayed.colour = \"#444444\";\nmsgDelayed.textcolour =\"#333333\"\nmsgStart = {};\nmsgStart.colour = \"#444444\";\nmsgStart.textcolour =\"#333333\"\n\nif(connected && !sessionActive) {\n    msgStart.colour = \"#4B7930\";\n    msgStart.textcolour = \"#FFFFFF\"\n    if(timerVal > 0) {\n        msgDelayed.colour = \"#4B7930\";\n        msgDelayed.textcolour = \"#FFFFFF\"\n    }\n}\n\nnode.send([msgDelayed, msgStart]);\n",
        "outputs": 2,
        "noerr": 0,
        "x": 2500,
        "y": 2060,
        "wires": [
            [
                "144faf71.e45f11"
            ],
            [
                "f2d17010.6d11d"
            ]
        ]
    },
    {
        "id": "c1317a98.2f2e68",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delayed_session_hours",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 2040,
        "wires": [
            [
                "e8e01e5a.df5c7"
            ]
        ]
    },
    {
        "id": "c845f093.194a5",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delayed_session_minutes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 2080,
        "wires": [
            [
                "e8e01e5a.df5c7"
            ]
        ]
    },
    {
        "id": "70ab2998.70e028",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 2060,
        "wires": [
            [
                "b1ccae28.53456",
                "56bbb891.cbf6b8"
            ]
        ]
    },
    {
        "id": "d9db71ec.8911c",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "d1a86442.7b18f8"
        ],
        "x": 2655,
        "y": 1840,
        "wires": [
            [
                "ffdf3fe7.d5d46"
            ]
        ]
    },
    {
        "id": "c2cf6b49.b5d4d8",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Set session start",
        "func": "var delay = 0;\nif(msg.payload === \"delayed session\") {\n    var minutes = flow.get('delayed_session_minutes');\n    var hours = flow.get('delayed_session_hours');\n    delay = hours * 60 + minutes;\n}\n\nmsg = {};\npayload = flow.get('selected_batch');\n\nmsg.delay = delay;\nmsg.payload = payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3030,
        "y": 2080,
        "wires": [
            [
                "105c2bbe.fec7b4",
                "fff72b47.ea0f18"
            ]
        ]
    },
    {
        "id": "18ef90.616fd071",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "d1a86442.7b18f8"
        ],
        "x": 2435,
        "y": 1580,
        "wires": [
            [
                "64ec676c.b5f938"
            ]
        ]
    },
    {
        "id": "a100da8f.0b0ff8",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "d1a86442.7b18f8"
        ],
        "x": 1555,
        "y": 2060,
        "wires": [
            [
                "70ab2998.70e028"
            ]
        ]
    },
    {
        "id": "4296f61b.e2b988",
        "type": "link in",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "d1a86442.7b18f8",
            "5b7c9271.25ca2c"
        ],
        "x": 2275,
        "y": 2000,
        "wires": [
            [
                "e8e01e5a.df5c7"
            ]
        ]
    },
    {
        "id": "5b7c9271.25ca2c",
        "type": "link out",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "links": [
            "4296f61b.e2b988"
        ],
        "x": 4155,
        "y": 1760,
        "wires": []
    },
    {
        "id": "b6118699.5d7d08",
        "type": "ui_switch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "label": "Display sparge water counter",
        "tooltip": "",
        "group": "d9188a2e.55c2a8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1160,
        "y": 440,
        "wires": [
            [
                "6c18fde3.c8df14"
            ]
        ]
    },
    {
        "id": "d95c93f4.63de3",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "display_sparge_counter",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 440,
        "wires": [
            [
                "b6118699.5d7d08"
            ]
        ]
    },
    {
        "id": "6c18fde3.c8df14",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "display_sparge_counter",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "250b3798.6a8578",
        "type": "function",
        "z": "9dea0b26.bbbe98",
        "name": "Test recipe with sparge alerts",
        "func": "var testRecipe = [\n    \"R30,2,15,16,\", // 30 min boil, 2 mash step, 15L mash vol, 16 L sparge vol\n    \"0,1,1,0,0,\", // No water tratment alert, sparge counter, sparge alert, no delayed session, do not skip start\n    \"SPARGE TEST\", // Name of recipe\n    \"0,1,0,0,\", // No hop stand, 1 boil addition, no boil power mode, no strike temp mode\n    \"1\", // Boil addition 1 at 1 mins remaining\n    \"25:45,\", // Mash step 1, 25°C for 45 mins\n    \"28:10,\" // Mash step 2, 28°C for 10 mins\n    ];\nmsg.payload = testRecipe;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3980,
        "y": 1060,
        "wires": [
            [
                "972a9ebc.ebca7",
                "46b9479a.5828e8"
            ]
        ]
    },
    {
        "id": "918313f2.94fab",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3720,
        "y": 1060,
        "wires": [
            [
                "250b3798.6a8578"
            ]
        ]
    },
    {
        "id": "aeb0cca2.b2d23",
        "type": "ui_switch",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "label": "Display sparge water reminder",
        "tooltip": "",
        "group": "d9188a2e.55c2a8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1170,
        "y": 500,
        "wires": [
            [
                "bf84081d.bb96b8"
            ]
        ]
    },
    {
        "id": "1862da4c.900f46",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "display_sparge_heat_reminder",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 500,
        "wires": [
            [
                "aeb0cca2.b2d23"
            ]
        ]
    },
    {
        "id": "bf84081d.bb96b8",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "display_sparge_heat_reminder",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "fb93cc0.59f3638",
        "type": "change",
        "z": "9dea0b26.bbbe98",
        "name": "Decode Sparge Alert (B)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sparge_heat_alert",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1960,
        "wires": [
            [
                "787fce9c.18755"
            ]
        ]
    },
    {
        "id": "886575fc.5050c8",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Reset sparge heat alert",
        "topic": "",
        "payload": "V",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3800,
        "y": 380,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "6810c8e9.3541c8",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Dismiss boil alert",
        "topic": "",
        "payload": "A",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3760,
        "y": 300,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    },
    {
        "id": "3e00495d.e56426",
        "type": "inject",
        "z": "9dea0b26.bbbe98",
        "name": "Press Set",
        "topic": "",
        "payload": "T",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 3760,
        "y": 800,
        "wires": [
            [
                "bc61b8e9.017228"
            ]
        ]
    }
]